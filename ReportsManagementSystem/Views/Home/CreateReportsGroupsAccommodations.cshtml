<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">

    <title>GroupAccommodationMapping - Bookingwhizz</title>

    <style>
      
        #myTable {
            width: 100%;
            border-collapse: collapse;
        }
        
        .filters-grid {
            display: grid;
            grid-template-columns: repeat(3, minmax(0, 1fr));
          
        }
        @@media (max-width: 992px) {
            .filters-grid {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        @@media (max-width: 600px) {
            .filters-grid {
                grid-template-columns: 1fr;
            }
        }

     
        .filter-input, .form-control {
            height: 40px;
            padding: 6px 12px;
            border: 1px solid #d1d5db;
            border-radius: 6px;
            font-size: 0.95rem;
            outline: none;
            transition: border-color .15s ease, box-shadow .15s ease;
        }
        .filter-input:focus, .form-control:focus {
            border-color: #6366f1;
            box-shadow: 0 0 0 3px rgba(99,102,241,0.2);
        }

        /* Dropdown (autocomplete list) */
        #accommodationList {
            display:none;
            position: absolute;
            top: 100%;
            left: 0;
            width: 100%;
            z-index: 99;
            max-height: 200px;
            overflow-y: auto;
            border: 1px solid #d1d5db;
            border-radius: 6px;
            background: #fff;
        }
        #accommodationList li {
            padding: 8px 12px;
            cursor: pointer;
        }
        #accommodationList li:hover {
                    background: #0078D7;
        }

        /* Button */
        .filter-button.primary.small-btn {
            height: 40px;
            padding: 0 20px;
            margin-top:30px;
            border: none;
            border-radius: 6px;
            background: #6366f1;
            color: #fff;
            font-weight: 600;
            cursor: pointer;
            transition: background .15s ease, box-shadow .15s ease;
        }
        .filter-button.primary.small-btn:hover:not(:disabled) {
            background: #4f46e5;
            box-shadow: 0 4px 12px rgba(99,102,241,.3);
        }
       


        list-group-item {
            cursor: pointer; /* Cursor ko pointer par set karein */
        }

        .list-group-item:hover {
            background-color: #0078D7; /* Mouse hover par background color */
            color: white;
            cursor: pointer;
        }

        list-groups-item {
            cursor: pointer; /* Cursor ko pointer par set karein */
        }

        .list-groups-item:hover {
            background-color: black; /* Mouse hover par background color */
            color: white;
            cursor: pointer;
        }

        table.dataTable tbody tr td {
            padding: 4px 8px; /* vertical padding kam kare */
            line-height: 1.2; /* text spacing kam kare */
        }

        table.dataTable tbody tr {
            height: auto; /* fixed height hataye agar lagi ho */
        }

        /* Full inner grid (rows + columns) */
            #myTable {
                border-collapse: collapse !important; /* double borders avoid */
            }

            #myTable th, #myTable td {
                border: 1px solid #212529 !important; /* dark lines inside rows */
            }

            #myTable thead th {
                border-bottom-width: 2px !important; /* header line a bit thicker */
            }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: #f5f5f5;
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1600px;
            margin: 0 auto;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            overflow: hidden;
        }

        .header {
            background: #1a1a1a;
            color: white;
            padding: 30px;
            text-align: center;
        }

            .header h1 {
                font-size: 2.5rem;
                margin-bottom: 10px;
                font-weight: 700;
            }

            .header p {
                font-size: 1.1rem;
                opacity: 0.9;
            }

        .content {
            padding: 40px;
        }

        .back-button {
            background: #007bff;
            color: white;
            padding: 12px 24px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: 600;
            transition: background-color 0.2s ease;
            margin-bottom: 30px;
            text-decoration: none;
            display: inline-block;
        }

            .back-button:hover {
                background: #0056b3;
            }

        .filters-section {
            background: #f8f9fa;
            padding: 30px;
            border-radius: 8px;
            margin-bottom: 30px;
            border: 1px solid #e0e6ed;
        }

        .filters-title {
            font-size: 1.3rem;
            font-weight: 600;
            color: #333;
            margin-bottom: 20px;
        }

        .filters-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }

        .filter-group {
            display: flex;
            flex-direction: column;
        }

        .filter-label {
            font-weight: 600;
            color: #333;
            margin-bottom: 8px;
            font-size: 0.9rem;
        }

        .filter-input {
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 0.9rem;
            transition: border-color 0.2s ease;
        }

            .filter-input:focus {
                outline: none;
                border-color: #007bff;
                box-shadow: 0 0 0 2px rgba(0,123,255,0.25);
            }

        .filter-actions {
            display: flex;
            gap: 15px;
            margin-top: 20px;
        }

        .filter-button {
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.9rem;
            font-weight: 600;
            transition: all 0.2s ease;
        }

            .filter-button.primary {
                background: #007bff;
                color: white;
            }

                .filter-button.primary:hover {
                    background: #0056b3;
                }

            .filter-button.secondary {
                background: #6c757d;
                color: white;
            }

                .filter-button.secondary:hover {
                    background: #545b62;
                }

        .export-section {
            background: #e8f5e8;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 30px;
            border-left: 5px solid #1cc88a;
        }

        .export-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: #155724;
            margin-bottom: 15px;
        }

        .export-options {
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
        }

        .export-button {
            background: #1cc88a;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.9rem;
            font-weight: 600;
            transition: background-color 0.2s ease;
            display: flex;
            align-items: center;
            gap: 8px;
        }

            .export-button:hover {
                background: #17a085;
            }

        .results-summary {
            background: #6f42c1;
            color: white;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .summary-stats {
            display: flex;
            gap: 30px;
        }

        .summary-stat {
            text-align: center;
        }

        .stat-value {
            font-size: 1.5rem;
            font-weight: bold;
            margin-bottom: 5px;
        }

        .stat-label {
            font-size: 0.9rem;
            opacity: 0.9;
        }

        .table-container {
            background: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            border: 1px solid #e0e6ed;
        }

        .table-header {
            background: #1a1a1a;
            color: white;
            padding: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .table-title {
            font-size: 1.2rem;
            font-weight: 600;
        }

        .table-controls {
            display: flex;
            gap: 10px;
            align-items: center;
        }

        .search-input {
            padding: 8px 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 0.9rem;
            width: 200px;
        }

        .pagination-info {
            color: #ccc;
            font-size: 0.9rem;
        }

     
        tr:hover {
            background: #f1f5f9;
        }

        .rate-plan-badge {
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 0.8rem;
            font-weight: 600;
            color: white;
        }

      

        .performance-indicator {
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

        .performance-bar {
            width: 60px;
            height: 8px;
            background: #e0e6ed;
            border-radius: 4px;
            overflow: hidden;
        }

        .performance-fill {
            height: 100%;
            transition: width 0.3s ease;
        }

      
        .pagination {
            padding: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            background: #f8f9fa;
            border-top: 1px solid #e0e6ed;
        }

        .pagination-controls {
            display: flex;
            gap: 10px;
        }

        .pagination-button {
            padding: 8px 12px;
            border: 1px solid #ddd;
            background: white;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.9rem;
            transition: all 0.2s ease;
        }

          

        @@media (max-width: 768px) {
            .header h1 {
                font-size: 2rem;
            }

            .content {
                padding: 20px;
            }

            .filters-grid {
                grid-template-columns: 1fr;
            }

            .export-options {
                flex-direction: column;
            }

            .results-summary {
                flex-direction: column;
                gap: 15px;
            }

            .summary-stats {
                justify-content: center;
            }

            .table-container {
                overflow-x: auto;
            }
        }
    </style>

</head>

<body>

    @{
        int? selectedGroupId = ViewBag.p_ReportGroupId as int?;
        bool isGroupAllSelected = !selectedGroupId.HasValue || selectedGroupId.Value == 0;

        int? selectedSubGroupId = ViewBag.p_ReportSubGroupId as int?;
        bool isGroupSubAllSelected = !selectedSubGroupId.HasValue || selectedSubGroupId.Value == 0;
    }

    <div class="container">
        <div class="header">
            <h1>GroupAccommodationMapping</h1>
        </div>

        <div class="content">
            <a href="@Url.Action("Index","Home")" class="back-button" style="color:white;">← Back to Main Dashboard</a>

            <div class="filters-section">
                <div class="filters-title">GroupAccommodationMapping</div>
               
                <form method="get" asp-action="CreateReportsGroupsAccommodations" asp-controller="Home">
                    
                    <div class="filters-grid">

                        <div class="filter-group">
                            <label class="filter-label" for="p_ReportGroupId">GroupName</label>
                            <select class="filter-input" name="p_ReportGroupId" id="RolesGroupsDropdown">

                                <option value="" select="@(isGroupAllSelected ? "selected" : null)">---SelectGroup---</option>

                                @if (ViewBag.groups != null)
                                {
                                    foreach (var item in ViewBag.groups)
                                    {
                                        <option value="@item.ReportGroupId"
                                                selected="@(item.ReportGroupId == (ViewBag.p_ReportGroupId as int?) ? "selected" : null)">
                                            @item.ReportGroupName
                                        </option>
                                    }
                                }
                            </select>

                        </div>

                        <div class="filter-group">
                            <label class="filter-label" for="p_ReportSubGroupId">SubGroupName</label>
                            <select class="filter-input" name="p_ReportSubGroupId" id="RoleGroupCombinedDropdown">

                                <option value="" select="@(isGroupSubAllSelected ? "selected" : null)">---SelectSubGroup---</option>

                                @if (ViewBag.subgroups != null)
                                {
                                    foreach (var item in ViewBag.subgroups)
                                    {
                                        <option value="@item.ReportSubGroupId"
                                                selected="@(item.ReportSubGroupId == (ViewBag.p_ReportSubGroupId as int?) ? "selected" : null)">
                                            @item.ReportSubGroupName
                                        </option>
                                    }
                                }

                            </select>
                        </div>

                        <div class="filter-group" style="position: relative;">
                            <label class="filter-label" for="accommodationInput">Select Accommodation</label>
                            <input type="text" id="accommodationInput" value="@ViewBag.getname" class="form-control" placeholder="10656Midway Inn Hotel 123141234" name="p_AccommodationSearch">
                            <input type="hidden" id="P_AccommodatioIdIdHidden" value="@ViewBag.p_AccommodationId" name="P_AccommodationId">
                            <ul id="accommodationList" class="list-group dropdown-menu"></ul>

                        </div>

                        <div class="form-actions">
                            <button type="submit" class="filter-button primary">Submit</button>
                        </div>

                    </div>
                </form>

            </div>

            <div class="results-summary">
                <div class="summary-stats">
                    <div class="summary-stat">
                        <div class="stat-value">12</div>
                        <div class="stat-label">Active Rate Plans</div>
                    </div>
                    <div class="summary-stat">
                        <div class="stat-value">$1.2M</div>
                        <div class="stat-label">Total Revenue</div>
                    </div>
                    <div class="summary-stat">
                        <div class="stat-value">8,947</div>
                        <div class="stat-label">Total Bookings</div>
                    </div>
                    <div class="summary-stat">
                        <div class="stat-value">73.2%</div>
                        <div class="stat-label">Avg Performance</div>
                    </div>
                </div>
                <div class="pagination-info">
                    Showing 1-12 of 12 rate plans
                </div>
            </div>

            <div class="table-container">
                <div class="table-header">
                    <div class="table-title">GroupAccommodationMapping</div>
                    <div class="table-controls">
                        <input type="text" class="search-input" placeholder="Search rate plans..." id="searchInput">
                    </div>
                </div>

                <table id="myTable" class="table table-bordered border-dark table-sm w-100">
                    <thead>
                        <tr style="font-size:10px;">
                            <th>ReportGroupName</th>
                            <th>ReportSubGroupName</th>
                            <th>AccommodationName</th>  
                            <th>IsMapped</th>
                          
                        </tr>
                    </thead>
                    <tbody>
                        @if (ViewBag.showmapping != null)
                        {
                            foreach (var item in ViewBag.showmapping)
                            {
                                <tr style="font-size:10px;">
                                    <td>@item.ReportGroupName</td>
                                    <td>@item.ReportSubGroupName</td>
                                    <td>@item.AccommodationName</td>                                  
                                    <td>

                                        <button type="button"
                                                class="btn @(item.IsMapped == 1 ? "btn-success" : "btn-danger")"
                                                style="font-size:10px;"
                                                data-bs-toggle="modal"
                                                data-bs-target="#exampleModal"
                                                data-group-id="@item.ReportGroupId"
                                                data-group-name="@item.ReportGroupName"
                                                data-subgroup-id="@item.ReportSubGroupId"
                                                data-subgroup-name="@item.ReportSubGroupName"

                                            @(item.IsMapped == 1 ? "disabled" : "")>
                                            @(item.IsMapped == 1 ? "Mapped" : "NotMapped")
                                        </button>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>

        </div>
    </div>

  <script>
        function applyFilters() {
            alert('Filters applied! In a real implementation, this would refresh the table with filtered rate plan data.');
        }

        function clearFilters() {
            document.getElementById('dateFrom').value = '2024-05-01';
            document.getElementById('dateTo').value = '2024-06-30';
            document.getElementById('ratePlan').value = '';
            document.getElementById('roomType').value = '';
            document.getElementById('performanceLevel').value = '';
            document.getElementById('minRevenue').value = '';
            document.getElementById('minBookings').value = '';
            document.getElementById('bookingSource').value = '';
            document.getElementById('searchInput').value = '';
        }

        function exportData(format) {
            const formatNames = {
                'excel': 'Excel (.xlsx)',
                'csv': 'CSV (.csv)',
                'pdf': 'PDF (.pdf)',
                'analytics': 'Analytics Report (.pdf)'
            };

            alert(`Exporting rate plan data to ${formatNames[format]} format. In a real implementation, this would generate and download the file.`);
        }

        document.getElementById('searchInput').addEventListener('input', function (e) {
            const searchTerm = e.target.value.toLowerCase();
            const rows = document.querySelectorAll('tbody tr');

            rows.forEach(row => {
                const text = row.textContent.toLowerCase();
                row.style.display = text.includes(searchTerm) ? '' : 'none';
            });
        });
    </script>

</body>

</html>

<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">GroupAccommodationMapping</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="mapForm" method="post" asp-action="CreateReportsGroupsAccommodations">
                @Html.AntiForgeryToken()

                <div class="modal-body">
                    <div class="mb-2">
                        <strong>Accommodation:</strong><span>@ViewBag.getname</span>
                            <input type="hidden" id="P_AccommodatioIdIdHidden" value="@ViewBag.p_AccommodationId"
                           name="P_AccommodationId">
                    </div>
                    <div class="mb-2">
                        <strong>Group:</strong> <span id="GroupNameSpan"></span>
                    </div>
                    <div class="mb-2">
                        <strong>Sub Group:</strong> <span id="SubGroupNameSpan"></span>
                    </div>

                    <input type="hidden" id="ReportGroupIdHidden" name="P_ReportGroupId" />
                    <input type="hidden" id="ReportSubGroupIdHidden" name="P_ReportSubGroupId" />
                </div>

                <div class="modal-footer">
                    <button type="button" id="btnSubmit" class="btn btn-success">Do you want to mapped data</button>
                </div>
            </form>

        </div>
    </div>
</div>


<link rel="stylesheet" href="/lib/datatables/dataTables.bootstrap5.min.css">
<script src="/lib/jquery/jquery.min.js"></script>
<script src="/lib/datatables/jquery.dataTables.min.js"></script>
<script src="/lib/datatables/dataTables.bootstrap5.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
<!-- DataTables JS -->
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.4.1/js/dataTables.buttons.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.html5.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    // ===== store the button that opened the modal =====
    let _launchBtn = null;

    // When modal opens, capture trigger button + fill fields
    document.getElementById('exampleModal')
        .addEventListener('show.bs.modal', function (e) {
            _launchBtn = $(e.relatedTarget); // jQuery-wrapped trigger button

            const groupId = _launchBtn.data('group-id');
            const groupName = _launchBtn.data('group-name');
            const subGroupId = _launchBtn.data('subgroup-id');
            const subGroupName = _launchBtn.data('subgroup-name');

            // Fill modal labels
            $('#GroupNameSpan').text(groupName || '');
            $('#SubGroupNameSpan').text(subGroupName || '');

            // Fill hidden inputs for submit
            $('#ReportGroupIdHidden').val(groupId || '');
            $('#ReportSubGroupIdHidden').val(subGroupId || '');
        });

    // 1) Button click -> confirm
    $(document).on('click', '#btnSubmit', function (e) {
        e.preventDefault();

        Swal.fire({
            title: "Confirm mapping?",
            text: "Do you want to map this data?",
            icon: "question",
            showCancelButton: true,
            confirmButtonText: "Yes",
            cancelButtonText: "Cancel"
        }).then((res) => {
            if (res.isConfirmed) {
                const $form = $('#mapForm');
                $form.data('confirmed', true);
                $form.trigger('submit');
            }
        });
    });

    // 2) Form submit (sirf jab confirmed ho)
    $(document).on('submit', '#mapForm', function (e) {
        const $form = $(this);

        if (!$form.data('confirmed')) {
            e.preventDefault();
            return;
        }
        $form.data('confirmed', false);
        e.preventDefault();

        $('#btnSubmit').prop('disabled', true);

        $.ajax({
            url: $form.attr('action'),
            type: 'POST',
            data: $form.serialize(),
            headers: { 'X-Requested-With': 'XMLHttpRequest' },
            success: function (resp) {
                if (resp && resp.success) {
                    // ---- UI update: change the SAME table button instantly ----
                    if (_launchBtn && _launchBtn.length) {
                        _launchBtn
                            .removeClass('btn-danger')
                            .addClass('btn-success')
                            .text('Mapped')          // text update
                            .prop('disabled', true)    // disable mapped rows
                            .attr('data-mapped', '1');
                    }

                    Swal.fire({
                        title: "Success!",
                        text: resp.message || "Data successfully inserted!",
                        icon: "success",
                        confirmButtonText: "OK"
                    }).then(() => {
                        const modalEl = document.getElementById('exampleModal');
                        const modal = bootstrap.Modal.getInstance(modalEl) || new bootstrap.Modal(modalEl);
                        modal.hide();
                    });
                } else {
                    Swal.fire("Error", (resp && resp.message) || "Insert failed.", "error");
                }
            },
            error: function (xhr) {
                const msg = (xhr.responseJSON && xhr.responseJSON.message) || xhr.responseText || "Something went wrong.";
                Swal.fire("Error", msg, "error");
            },
            complete: function () {
                $('#btnSubmit').prop('disabled', false);
            }
        });
    });
</script>


@*<script>
    // 1) Button click -> confirm
    $(document).on('click', '#btnSubmit', function (e) {
        e.preventDefault();

        Swal.fire({
            title: "Confirm mapping?",
            text: "Do you want to map this data?",
            icon: "question",
            showCancelButton: true,
            confirmButtonText: "Yes",
            cancelButtonText: "Cancel"
        }).then((res) => {
            if (res.isConfirmed) {
                // Flag set karke submit trigger karo
                const $form = $('#mapForm');
                $form.data('confirmed', true);
                $form.trigger('submit');
            }
            // Cancel par kuch nahi karna (koi alert nahi)
        });
    });

    // 2) Form submit (sirf jab confirmed ho)
    $(document).on('submit', '#mapForm', function (e) {
        const $form = $(this);

        // Agar confirm nahi hua to submit rok do
        if (!$form.data('confirmed')) {
            e.preventDefault();
            return;
        }
        // Flag reset (taake accidental double-submit na ho)
        $form.data('confirmed', false);
        e.preventDefault();

        $('#btnSubmit').prop('disabled', true);

        $.ajax({
            url: $form.attr('action'),
            type: 'POST',
            data: $form.serialize(),
            headers: { 'X-Requested-With': 'XMLHttpRequest' },
            success: function (resp) {
                if (resp && resp.success) {
                    Swal.fire({
                        title: "Success!",
                        text: resp.message || "Data successfully inserted!",
                        icon: "success",
                        confirmButtonText: "OK"
                    }).then(() => {
                        const modalEl = document.getElementById('exampleModal');
                        const modal = bootstrap.Modal.getInstance(modalEl) || new bootstrap.Modal(modalEl);
                        modal.hide();
                    });
                } else {
                    Swal.fire("Error", (resp && resp.message) || "Insert failed.", "error");
                }
            },
            error: function (xhr) {
                const msg = (xhr.responseJSON && xhr.responseJSON.message) || xhr.responseText || "Something went wrong.";
                Swal.fire("Error", msg, "error");
            },
            complete: function () {
                $('#btnSubmit').prop('disabled', false);
            }
        });
    });
</script>
*@
<script>
    $(document).ready(function () {
        $('#myTable').DataTable({
            scrollX: true,
            pageLength: 10,
            lengthChange: false,     // 👈 "Show entries" dropdown remove karega
            searching: false,        // 👈 default DataTables search disable karega
            info: false,              // 👈 "Showing 1 to 10 of X entries" dikhayega
            paging: true
        });
    });
</script>

<script>
    $(document).ready(function () {
        $('#accommodationInput').on('input', function () {
            var searchQuery = $(this).val();

            $.ajax({
                url: '/Home/CreateReportsGroupsAccommodations',
                type: 'GET',
                data: { p_AccommodationSearch: searchQuery },
                success: function (response) {
                    $('#accommodationList').empty();

                    if (Array.isArray(response) && response.length > 0) {
                        $('#accommodationList').show();
                        response.forEach(function (item) {
                            $('#accommodationList').append('<li class="list-group-item" data-id="' + item.accommodationId + '">' + item.accommodationIdName + '</li>');
                        });
                    } else {
                        $('#accommodationList').hide();
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("Error: " + textStatus);
                }
            });
        });

        // ✅ Moved outside so it's not re-registered each time
        $(document).on('click', '#accommodationList li', function () {
            var accommodationId = $(this).data('id');
            var selectedText = $(this).text();

            $('#accommodationInput').val(selectedText);
            $('#P_AccommodatioIdIdHidden').val(accommodationId);
            $('#accommodationList').hide();
        });

        
    });

</script>

@*<script>
    function setHiddenFromSelect() {
        const val = document.getElementById('RolesGroupsDropdown').value; // e.g. "5-12"
        const [gid, sgid] = val ? val.split('-') : ['0', '0'];
        document.getElementById('P_ReportGroupId').value = gid || 0;
        document.getElementById('P_ReportSubGroupId').value = sgid || 0;
    }

    // on change
    document.getElementById('RolesGroupsDropdown').addEventListener('change', setHiddenFromSelect);

    // on load (agar edit form me already selected option ho)
    document.addEventListener('DOMContentLoaded', setHiddenFromSelect);
</script>
*@
 <script>
    $(document).on('click', '#accommodationList li', function () {
        const id = $(this).data('id');               // selected AccommodationId
        $('#accommodationInput').val($(this).text());
        $('#P_AccommodationId').val(id);             // <-- query param ke liye set
        //$('#accommodationList').hide();

      
    });

 </script>

<script>
    document.getElementById('exampleModal').addEventListener('show.bs.modal', function (event) {
        const button = event.relatedTarget; // jis button se modal open hua

        const groupId = button.getAttribute('data-group-id');
        const groupName = button.getAttribute('data-group-name');
        const subGroupId = button.getAttribute('data-subgroup-id');
        const subGroupName = button.getAttribute('data-subgroup-name');

        // Show in modal
        // Sirf names show karna
        document.getElementById('GroupNameSpan').textContent = groupName || '';
        document.getElementById('SubGroupNameSpan').textContent = subGroupName || '';

        // Hidden inputs
        document.getElementById('ReportGroupIdHidden').value = groupId || '';
        document.getElementById('ReportSubGroupIdHidden').value = subGroupId || '';
    });
</script>
