@model IEnumerable<ReportsManagementSystem.Models.ListGroupandSub>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">

    <title>Groups and SubGroups - Bookingwhizz</title>

    <style>
        .header {
            position: relative; /* important */
        }

        .topbar {
            position: absolute;
            top: 12px;
            right: 16px;
            display: flex;
            align-items: center;
            gap: 10px;
            z-index: 5;
        }

        .logout-button {
            background: #dc3545;
            color: #fff;
            border: none;
            padding: 5px;
            border-radius: 6px;
            cursor: pointer;
            font-weight: 600;
            transition: background .2s ease;
        }

            .logout-button:hover {
                background: #b02a37;
            }



        @@keyframes flash {
            0% {
                background: #e6ffed;
            }

            100% {
                background: transparent;
            }
        }

        tr.flash-added {
            animation: flash 1.2s ease-in-out;
        }
        .filters-section {
            background: #fff;
            border: 1px solid #e5e7eb;
            border-radius: 10px;
            padding: 24px;
            margin-top: 20px;
            box-shadow: 0 2px 6px rgba(0,0,0,0.05);
        }

        .filters-title {
            font-size: 1.2rem;
            font-weight: 600;
            margin-bottom: 18px;
            color: #333;
        }

        .filters-grid {
            display: grid;
            grid-template-columns: repeat(3, minmax(0, 1fr));
            gap: 20px;
            align-items: end;
        }

        @@media (max-width: 992px) {
            .filters-grid {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        @@media (max-width: 600px) {
            .filters-grid {
                grid-template-columns: 1fr;
            }
        }

        .filter-group {
            display: flex;
            flex-direction: column;
        }

        .filter-label {
            font-size: 0.9rem;
            font-weight: 500;
            margin-bottom: 6px;
            color: #444;
        }

        .filter-input, .form-control {
            height: 40px;
            padding: 6px 12px;
            border: 1px solid #d1d5db;
            border-radius: 6px;
            font-size: 0.95rem;
            outline: none;
            transition: border-color .15s ease, box-shadow .15s ease;
        }

            .filter-input:focus, .form-control:focus {
                border-color: #6366f1;
                box-shadow: 0 0 0 3px rgba(99,102,241,0.2);
            }

        /* Dropdown (autocomplete list) */
        #accommodationList {
            display: none;
            position: absolute;
            top: 100%;
            left: 0;
            width: 100%;
            z-index: 99;
            max-height: 200px;
            overflow-y: auto;
            border: 1px solid #d1d5db;
            border-radius: 6px;
            background: #fff;
        }

            #accommodationList li {
                padding: 8px 12px;
                cursor: pointer;
            }

                #accommodationList li:hover {
                    background: #f3f4f6;
                }

        /* Button */
        .filter-button.primary.small-btn {
            height: 40px;
            padding: 0 20px;
            border: none;
            border-radius: 6px;
            background: #6366f1;
            color: #fff;
            font-weight: 600;
            cursor: pointer;
            transition: background .15s ease, box-shadow .15s ease;
        }

            .filter-button.primary.small-btn:hover:not(:disabled) {
                background: #4f46e5;
                box-shadow: 0 4px 12px rgba(99,102,241,.3);
            }

        .filter-button:disabled {
            background: #e5e7eb !important;
            color: #9ca3af !important;
            cursor: not-allowed;
            box-shadow: none !important;
        }

        /* Submit full row (align right) */
        .form-actions {
            grid-column: 1 / -1;
            display: flex;
            justify-content: flex-end;
        }




        .filter-button:disabled {
            background-color: #ccc !important; /* light grey background */
            color: #666 !important; /* dark grey text */
            cursor: not-allowed; /* "stop" cursor */
            opacity: 0.6; /* slightly transparent */
        }


        table.dataTable tbody tr td {
            padding: 4px 8px; /* vertical padding kam kare */
            line-height: 1.2; /* text spacing kam kare */
        }

        table.dataTable tbody tr {
            height: auto; /* fixed height hataye agar lagi ho */
        }

        /* Full inner grid (rows + columns) */
        #myTable {
            border-collapse: collapse !important; /* double borders avoid */
        }

            #myTable th, #myTable td {
                border: 1px solid #212529 !important; /* dark lines inside rows */
            }

            #myTable thead th {
                border-bottom-width: 2px !important; /* header line a bit thicker */
            }


        .small-btn {
            width: 100px; /* Ya jitni tumhe chahiye */
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: #f5f5f5;
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1600px;
            margin: 0 auto;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            overflow: hidden;
        }

        .header {
            background: #1a1a1a;
            color: white;
            padding: 30px;
            text-align: center;
        }

        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            font-weight: 700;
        }

        .header p {
            font-size: 1.1rem;
            opacity: 0.9;
        }

        .content {
            padding: 40px;
        }

        .back-button {
            background: #007bff;
            color: white;
            padding: 12px 24px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: 600;
            transition: background-color 0.2s ease;
            margin-bottom: 30px;
            text-decoration: none;
            display: inline-block;
        }

        .back-button:hover {
            background: #0056b3;
        }

        .filters-section {
            background: #f8f9fa;
            padding: 30px;
            border-radius: 8px;
            margin-bottom: 30px;
            border: 1px solid #e0e6ed;
        }

        .filters-title {
            font-size: 1.3rem;
            font-weight: 600;
            color: #333;
            margin-bottom: 20px;
        }

        .filters-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }

        .filter-group {
            display: flex;
            flex-direction: column;
        }

        .filter-label {
            font-weight: 600;
            color: #333;
            margin-bottom: 8px;
            font-size: 0.9rem;
        }

        .filter-input {
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 0.9rem;
            transition: border-color 0.2s ease;
        }

        .filter-input:focus {
            outline: none;
            border-color: #007bff;
            box-shadow: 0 0 0 2px rgba(0,123,255,0.25);
        }

        .filter-actions {
            display: flex;
            gap: 15px;
            margin-top: 20px;
        }

        .filter-button {
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.9rem;
            font-weight: 600;
            transition: all 0.2s ease;
        }

        .filter-button.primary {
            background: #007bff;
            color: white;
        }

        .filter-button.primary:hover {
            background: #0056b3;
        }

        .filter-button.secondary {
            background: #6c757d;
            color: white;
        }

        .filter-button.secondary:hover {
            background: #545b62;
        }

        .export-section {
            background: #e8f5e8;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 30px;
            border-left: 5px solid #1cc88a;
        }

        .export-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: #155724;
            margin-bottom: 15px;
        }

        .export-options {
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
        }

        .export-button {
            background: #1cc88a;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.9rem;
            font-weight: 600;
            transition: background-color 0.2s ease;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .export-button:hover {
            background: #17a085;
        }

        .results-summary {
            background: #6f42c1;
            color: white;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .summary-stats {
            display: flex;
            gap: 30px;
        }

        .summary-stat {
            text-align: center;
        }

        .stat-value {
            font-size: 1.5rem;
            font-weight: bold;
            margin-bottom: 5px;
        }

        .stat-label {
            font-size: 0.9rem;
            opacity: 0.9;
        }

        .table-container {
            background: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            border: 1px solid #e0e6ed;
        }

        .table-header {
            background: #1a1a1a;
            color: white;
            padding: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .table-title {
            font-size: 1.2rem;
            font-weight: 600;
        }

        .table-controls {
            display: flex;
            gap: 10px;
            align-items: center;
        }

        .search-input {
            padding: 8px 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 0.9rem;
            width: 200px;
        }

        .pagination-info {
            color: #ccc;
            font-size: 0.9rem;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th, td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #e0e6ed;
            font-size: 0.9rem;
        }

        th {
            background: #f8f9fa;
            font-weight: 600;
            color: #333;
            position: sticky;
            top: 0;
            z-index: 10;
        }

       /* tr:hover {
            background: #f1f5f9;
        }*/

        .rate-plan-badge {
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 0.8rem;
            font-weight: 600;
            color: white;
        }

        .plan-bar {
            background: #1cc88a;
        }

        .plan-advance21 {
            background: #36b9cc;
        }

        .plan-advance7 {
            background: #17a2b8;
        }

        .plan-corporate {
            background: #6f42c1;
        }

        .plan-group {
            background: #f39c12;
        }

        .plan-weekend {
            background: #e74a3b;
        }

        .performance-indicator {
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

        .performance-bar {
            width: 60px;
            height: 8px;
            background: #e0e6ed;
            border-radius: 4px;
            overflow: hidden;
        }

        .performance-fill {
            height: 100%;
            transition: width 0.3s ease;
        }

        .perf-excellent {
            background: #1cc88a;
        }

        .perf-good {
            background: #36b9cc;
        }

        .perf-average {
            background: #f39c12;
        }

        .perf-poor {
            background: #e74a3b;
        }

        .amount {
            font-weight: 600;
            color: #333;
        }

        .trend-positive {
            color: #1cc88a;
            font-weight: 600;
        }

        .trend-negative {
            color: #e74a3b;
            font-weight: 600;
        }

        .trend-neutral {
            color: #6c757d;
            font-weight: 600;
        }

        .pagination {
            padding: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            background: #f8f9fa;
            border-top: 1px solid #e0e6ed;
        }

        .pagination-controls {
            display: flex;
            gap: 10px;
        }

        .pagination-button {
            padding: 8px 12px;
            border: 1px solid #ddd;
            background: white;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.9rem;
            transition: all 0.2s ease;
        }

        .pagination-button:hover {
            background: #f8f9fa;
        }

        .pagination-button.active {
            background: #007bff;
            color: white;
            border-color: #007bff;
        }

        .pagination-button:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        @@media (max-width: 768px) {
            .header h1 {
                font-size: 2rem;
            }
            
            .content {
                padding: 20px;
            }
            
            .filters-grid {
                grid-template-columns: 1fr;
            }
            
            .export-options {
                flex-direction: column;
            }
            
            .results-summary {
                flex-direction: column;
                gap: 15px;
            }
            
            .summary-stats {
                justify-content: center;
            }
            
            .table-container {
                overflow-x: auto;
            }
        }
    </style>

</head>

<body>

    @{
        int? selectedGroupId = ViewBag.p_ReportGroupId as int?;
        bool isGroupAllSelected = !selectedGroupId.HasValue || selectedGroupId.Value == 0;

        int? selectedSubGroupId = ViewBag.p_ReportSubGroupId as int?;
        bool isGroupSubAllSelected = !selectedSubGroupId.HasValue || selectedSubGroupId.Value == 0;
    }

     <div class="container">
        <div class="header">
            <div class="topbar">
                <span class="user-pill">@ViewBag.User</span>
                <form asp-controller="Account" asp-action="Logout" method="post">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="logout-button">Logout</button>
                </form>
            </div>
@*            <h4>@ViewBag.User</h4>
*@            <h1>Groups and SubGroups</h1>
            <p>Download detailed promotion performance and booking data with ROI analytics</p>
        </div>

        <div class="content">
            <a href="@Url.Action("Index","Home")" class="back-button" style="color:white;">← Back to Main Dashboard</a>

            <div class="filters-section">
                <div class="filters-title">Add Groups and SubGroups</div>
                <form id="groupsForm" method="post" asp-action="GroupsReport" asp-controller="Home">
                   
                    <div class="filters-grid">
                        <div class="filter-group">
                            <label class="filter-label" for="p_ReportGroupId">GroupName</label>
                            <select class="filter-input" name="p_ReportGroupId" id="RolesGroupsDropdown">

                                <option value="" select="@(isGroupAllSelected ? "selected" : null)">---SelectGroup---</option>

                                @if (ViewBag.groups != null)
                                {
                                    foreach (var item in ViewBag.groups)
                                    {
                                        <option value="@item.ReportGroupId"
                                                selected="@(item.ReportGroupId == (ViewBag.p_ReportGroupId as int?) ? "selected" : null)">
                                            @item.ReportGroupName
                                        </option>
                                    }
                                }
                            </select>                                
                        </div>

                        <div class="filter-group">
                            <label class="filter-label" for="p_ReportSubGroupId">SubGroupName</label>
                            <select class="filter-input" name="p_ReportSubGroupId" id="RoleGroupCombinedDropdown">

                                <option value="" select="@(isGroupSubAllSelected ? "selected" : null)">---SelectSubGroup---</option>

                                @if (ViewBag.subgroups != null)
                                {
                                    foreach (var item in ViewBag.subgroups)
                                    {
                                        <option value="@item.ReportSubGroupId"
                                                selected="@(item.ReportSubGroupId == (ViewBag.p_ReportSubGroupId as int?) ? "selected" : null)">
                                            @item.ReportSubGroupName
                                        </option>
                                    }
                                }

                            </select>                          
                        </div>

                        <div class="filter-group" style="margin-top:25px;">
                            <button type="button" id="btnSubmit" class="filter-button primary small-btn" disabled>Submit</button>
                        </div>
                    </div>
                </form>
            </div>

            <div class="results-summary">
                <div class="summary-stats">
                    <div class="summary-stat">
                        <div class="stat-value">12</div>
                        <div class="stat-label">Active Rate Plans</div>
                    </div>
                    <div class="summary-stat">
                        <div class="stat-value">$1.2M</div>
                        <div class="stat-label">Total Revenue</div>
                    </div>
                    <div class="summary-stat">
                        <div class="stat-value">8,947</div>
                        <div class="stat-label">Total Bookings</div>
                    </div>
                    <div class="summary-stat">
                        <div class="stat-value">73.2%</div>
                        <div class="stat-label">Avg Performance</div>
                    </div>
                </div>
                <div class="pagination-info">
                    Showing 1-12 of 12 rate plans
                </div>
            </div>

            <div class="table-container">
                <div class="table-header">
                    <div class="table-title">Rate Plan Performance Data</div>
                    <div class="table-controls">
                        <input type="text" class="search-input" placeholder="Search rate plans..." id="searchInput">
                    </div>
                </div>
                <table id="myTable" class="table table-striped w-100">
                    <thead>
                        <tr>
                            <th>ReportGroupId</th>
                            <th>ReportGroupName</th>
                            <th>ReportSubGroupId</th>
                            <th>ReportSubGroupName</th>                           
                        </tr>
                    </thead>
                    <tbody id="myTableBody">

                        @if (Model != null)
                        {
                            foreach (var item in Model)
                            {
                                <tr style="font-size:10px;">
                                    <td>@item.ReportGroupId</td>
                                    <td>@item.ReportGroupName</td>
                                    <td>@item.ReportSubGroupId</td>
                                    <td>@item.ReportSubGroupName</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>           
            </div>

        </div>
    </div>

   <script>
        function applyFilters() {
            alert('Filters applied! In a real implementation, this would refresh the table with filtered rate plan data.');
        }

        function clearFilters() {
            document.getElementById('dateFrom').value = '2024-05-01';
            document.getElementById('dateTo').value = '2024-06-30';
            document.getElementById('ratePlan').value = '';
            document.getElementById('roomType').value = '';
            document.getElementById('performanceLevel').value = '';
            document.getElementById('minRevenue').value = '';
            document.getElementById('minBookings').value = '';
            document.getElementById('bookingSource').value = '';
            document.getElementById('searchInput').value = '';
        }

        function exportData(format) {
            const formatNames = {
                'excel': 'Excel (.xlsx)',
                'csv': 'CSV (.csv)',
                'pdf': 'PDF (.pdf)',
                'analytics': 'Analytics Report (.pdf)'
            };
            
            alert(`Exporting rate plan data to ${formatNames[format]} format. In a real implementation, this would generate and download the file.`);
        }

        document.getElementById('searchInput').addEventListener('input', function(e) {
            const searchTerm = e.target.value.toLowerCase();
            const rows = document.querySelectorAll('tbody tr');
            
            rows.forEach(row => {
                const text = row.textContent.toLowerCase();
                row.style.display = text.includes(searchTerm) ? '' : 'none';
            });
        });
    </script>

</body>
</html>

<script src="/lib/jquery/jquery.min.js"></script>
<script src="/lib/datatables/jquery.dataTables.min.js"></script>
<script src="/lib/datatables/dataTables.bootstrap5.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
<!-- DataTables JS -->
<script src="https://cdn.datatables.net/buttons/2.4.1/js/dataTables.buttons.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.html5.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.8/css/dataTables.bootstrap5.min.css">
<script src="https://cdn.datatables.net/1.13.8/js/jquery.dataTables.min.js"></script>
<!-- omit the datatables .css -->
<script src="https://cdn.datatables.net/1.13.8/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const form = document.getElementById('groupsForm');
        const btn = document.getElementById('btnSubmit');
        const ddlG = document.getElementById('RolesGroupsDropdown');
        const ddlS = document.getElementById('RoleGroupCombinedDropdown');
        const tbody = document.getElementById('myTableBody');

        const esc = (s) => { const d = document.createElement('div'); d.textContent = s ?? ''; return d.innerHTML; };

        function toggleBtn() { btn.disabled = !(ddlG.value && ddlS.value); }
        ddlG.addEventListener('change', toggleBtn);
        ddlS.addEventListener('change', toggleBtn);
        toggleBtn();

        btn.addEventListener('click', async function () {
            if (btn.disabled) return;

            // Confirm: Yes / Cancel
            const { isConfirmed } = await Swal.fire({
                title: 'Confirm?',
                text: 'do you want to insert data?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Yes',
                cancelButtonText: 'Cancel',
                //reverseButtons: true,
                //allowOutsideClick: false
            });
            if (!isConfirmed) {
                Swal.fire({
                    toast: true, position: 'bottom-end',
                    icon: 'info', title: 'Cancelled',
                    showConfirmButton: false, timer: 1600, timerProgressBar: true
                });
                return;
            }

            // Proceed with POST (no loading modal)
            const tokenInput = form.querySelector('input[name="__RequestVerificationToken"]');
            const token = tokenInput ? tokenInput.value : null;
            const fd = new FormData(form);

            btn.disabled = true;

            try {
                const res = await fetch(form.action, {
                    method: 'POST',
                    headers: {
                        ...(token ? { 'RequestVerificationToken': token } : {}),
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: fd
                });
                if (!res.ok) throw new Error('HTTP ' + res.status);
                const data = await res.json();

                // Original toast
                Swal.fire({
                    toast: true, position: 'bottom-end',
                    icon: data.success ? 'success' : 'error',
                    title: data.message || (data.success ? 'Success' : 'Failed'),
                    showConfirmButton: false, timer: 2200, timerProgressBar: true
                });

                if (data.success) {
                    // Table update (same as before)
                    const gId = ddlG.value;
                    const gTxt = ddlG.options[ddlG.selectedIndex]?.text || '';
                    const sId = ddlS.value;
                    const sTxt = ddlS.options[ddlS.selectedIndex]?.text || '';

                    if (window.jQuery && jQuery.fn.dataTable && jQuery('#myTable').hasClass('dataTable')) {
                        const dt = jQuery('#myTable').DataTable();
                        dt.row.add([gId, gTxt, sId, sTxt]).draw(false);
                    } else {
                        const tr = document.createElement('tr');
                        tr.style.fontSize = '10px';
                        tr.innerHTML = `
                            <td>${esc(gId)}</td>
                            <td>${esc(gTxt)}</td>
                            <td>${esc(sId)}</td>
                            <td>${esc(sTxt)}</td>`;
                        tbody.prepend(tr);
                    }

                    // Optional: form.reset(); toggleBtn();
                }
            } catch (e) {
                Swal.fire({
                    toast: true, position: 'bottom-end',
                    icon: 'error', title: 'Error', text: e.message,
                    showConfirmButton: false, timer: 3000
                });
            } finally {
                toggleBtn();
            }
        });
    });
</script>

<script>
    $(document).ready(function () {
        $('#myTable').DataTable({
            scrollX: true,
            pageLength: 10,
            lengthChange: false,     // 👈 "Show entries" dropdown remove karega
            searching: false,        // 👈 default DataTables search disable karega
            info: false,              // 👈 "Showing 1 to 10 of X entries" dikhayega
            paging: true
        });
    });
</script>

<script>
    $(document).ready(function () {
        // When RoleId changes
        $('#RolesGroupsDropdown').change(function () {
            var groupId = $(this).val();

            // Make AJAX call only if RoleId is selected
            if (groupId) {
                // Suppose ye AJAX call aapka insert/save ke liye hai
             
                $.ajax({
                    url: '/Home/SelectGroup', // Make sure this matches your controller's action
                    type: 'GET',
                    data: { p_ReportGroupId: groupId },

                    success: function (group) {
                        // Handle success - populate RoleGroup dropdown dynamically
                        $('#RoleGroupCombinedDropdown').empty();
                        $('#RoleGroupCombinedDropdown').append('<option value="">Select SubGroupName</option>');
                        $.each(group, function (index, group) {
                            $('#RoleGroupCombinedDropdown').append('<option value="' + group.reportSubGroupId + '">' + group.reportSubGroupName + '</option>');
                        });
                    },
                    error: function (error) {
                        console.error("Error fetching RoleGroups:", error);
                    }
                });
            }
        });
    });
</script>

<script>
    $(document).ready(function () {

        // Function to enable/disable button
        function toggleSubmitButton() {
            var groupId = $('#RolesGroupsDropdown').val();
            var subGroupId = $('#RoleGroupCombinedDropdown').val();

            if (groupId && groupId !== "---SelectGroup---" && subGroupId && subGroupId !== "---SelectSubGroup---") {
                $('#btnSubmit').prop('disabled', false);
            } else {
                $('#btnSubmit').prop('disabled', true);
            }
        }

        // Jab dropdown change ho to check karo
        $('#RolesGroupsDropdown, #RoleGroupCombinedDropdown').change(function () {
            toggleSubmitButton();
        });

        // Page load hone par bhi check kar lo
        toggleSubmitButton();
    });
</script>


