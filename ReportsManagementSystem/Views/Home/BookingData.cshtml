@model IEnumerable<ReportsManagementSystem.Models.BookingsData>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Booking Data Export - Bookingwhizz</title>
    <style>
        .custom-dropdown {
            display: none;
            position: absolute;
            width: 100%;
            top: 100%;
            left: 0;
            z-index: 999;
            max-height: 200px;
            overflow-y: auto;
            border: 1px solid #ccc;
            background-color: #fff;
            box-shadow: 0px 4px 8px rgba(0,0,0,0.1);
            margin-top: 4px;
            border-radius: 4px;
        }

            .custom-dropdown .list-group-item {
                padding: 10px 15px;
                cursor: pointer;
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
            }

                .custom-dropdown .list-group-item:hover {
                    background-color: #f5f5f5;
                }


            .custom-dropdown .list-group-item {
                cursor: pointer;
                padding: 10px 15px;
            }

                .custom-dropdown .list-group-item:hover {
                    background-color: #f0f0f0;
                }


        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: #f5f5f5;
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1600px;
            margin: 0 auto;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            overflow: hidden;
        }

        .header {
            background: #1a1a1a;
            color: white;
            padding: 30px;
            text-align: center;
        }

        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            font-weight: 700;
        }

        .header p {
            font-size: 1.1rem;
            opacity: 0.9;
        }

        .content {
            padding: 40px;
        }

        .back-button {
            background: #007bff;
            color: white;
            padding: 12px 24px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: 600;
            transition: background-color 0.2s ease;
            margin-bottom: 30px;
            text-decoration: none;
            display: inline-block;
        }

        .back-button:hover {
            background: #0056b3;
        }

        .filters-section {
            background: #f8f9fa;
            padding: 30px;
            border-radius: 8px;
            margin-bottom: 30px;
            border: 1px solid #e0e6ed;
        }

        .filters-title {
            font-size: 1.3rem;
            font-weight: 600;
            color: #333;
            margin-bottom: 20px;
        }

        .filters-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }

        .filter-group {
            display: flex;
            flex-direction: column;
        }

        .filter-label {
            font-weight: 600;
            color: #333;
            margin-bottom: 8px;
            font-size: 0.9rem;
        }

        .filter-input {
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 0.9rem;
            transition: border-color 0.2s ease;
        }

        .filter-input:focus {
            outline: none;
            border-color: #007bff;
            box-shadow: 0 0 0 2px rgba(0,123,255,0.25);
        }

        .filter-actions {
            display: flex;
            gap: 15px;
            margin-top: 20px;
        }

        .filter-button {
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.9rem;
            font-weight: 600;
            transition: all 0.2s ease;
        }

        .filter-button.primary {
            background: #007bff;
            color: white;
        }

        .filter-button.primary:hover {
            background: #0056b3;
        }

        .filter-button.secondary {
            background: #6c757d;
            color: white;
        }

        .filter-button.secondary:hover {
            background: #545b62;
        }

        .export-section {
            background: #e8f5e8;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 30px;
            border-left: 5px solid #1cc88a;
        }

        .export-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: #155724;
            margin-bottom: 15px;
        }

        .export-options {
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
        }

        .export-button {
            background: #1cc88a;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.9rem;
            font-weight: 600;
            transition: background-color 0.2s ease;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .export-button:hover {
            background: #17a085;
        }

        .results-summary {
            background: #36b9cc;
            color: white;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .summary-stats {
            display: flex;
            gap: 30px;
        }

        .summary-stat {
            text-align: center;
        }

        .stat-value {
            font-size: 1.5rem;
            font-weight: bold;
            margin-bottom: 5px;
        }

        .stat-label {
            font-size: 0.9rem;
            opacity: 0.9;
        }

        .table-container {
            background: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            border: 1px solid #e0e6ed;
        }

        .table-header {
            background: #1a1a1a;
            color: white;
            padding: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .table-title {
            font-size: 1.2rem;
            font-weight: 600;
        }

        .table-controls {
            display: flex;
            gap: 10px;
            align-items: center;
        }

        .search-input {
            padding: 8px 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 0.9rem;
            width: 200px;
        }

        .pagination-info {
            color: #ccc;
            font-size: 0.9rem;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th, td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #e0e6ed;
            font-size: 0.9rem;
        }

        th {
            background: #f8f9fa;
            font-weight: 600;
            color: #333;
            position: sticky;
            top: 0;
            z-index: 10;
        }

        tr:hover {
            background: #f1f5f9;
        }

        .status-badge {
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 0.8rem;
            font-weight: 600;
            color: white;
        }

        .status-confirmed {
            background: #1cc88a;
        }

        .status-pending {
            background: #f39c12;
        }

        .status-cancelled {
            background: #e74a3b;
        }

        .status-no-show {
            background: #6c757d;
        }

        .source-badge {
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 0.8rem;
            font-weight: 600;
            color: white;
        }

        .source-direct {
            background: #1cc88a;
        }

        .source-booking {
            background: #007bff;
        }

        .source-expedia {
            background: #f39c12;
        }

        .source-agoda {
            background: #e74a3b;
        }

        .source-airbnb {
            background: #ff5a5f;
        }

        .amount {
            font-weight: 600;
            color: #333;
        }

        .pagination {
            padding: 20px;
            display: flex;
            justify-content: between;
            align-items: center;
            background: #f8f9fa;
            border-top: 1px solid #e0e6ed;
        }

        .pagination-controls {
            display: flex;
            gap: 10px;
        }

        .pagination-button {
            padding: 8px 12px;
            border: 1px solid #ddd;
            background: white;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.9rem;
            transition: all 0.2s ease;
        }

        .pagination-button:hover {
            background: #f8f9fa;
        }

        .pagination-button.active {
            background: #007bff;
            color: white;
            border-color: #007bff;
        }

        .pagination-button:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        @@media (max-width: 768px) {
            .header h1 {
                font-size: 2rem;
            }
            
            .content {
                padding: 20px;
            }
            
            .filters-grid {
                grid-template-columns: 1fr;
            }
            
            .export-options {
                flex-direction: column;
            }
            
            .results-summary {
                flex-direction: column;
                gap: 15px;
            }
            
            .summary-stats {
                justify-content: center;
            }
            
            .table-container {
                overflow-x: auto;
            }
        }

        .table-responsive-custom {
            overflow-x: auto;
            max-width: 100%;
            background-color: white;
            border-radius: 5px;
            scrollbar-width: thin;
            scrollbar-color: black #f1f1f1; /* For Firefox */
        }

            .table-responsive-custom::-webkit-scrollbar {
                height: 8px;
            }

            .table-responsive-custom::-webkit-scrollbar-track {
                background: #f1f1f1;
            }

            .table-responsive-custom::-webkit-scrollbar-thumb {
                background-color: black;
                border-radius: 4px;
            }

                .table-responsive-custom::-webkit-scrollbar-thumb:hover {
                    background-color: #333;
                }

    </style>
</head>
<body>
    
    <div class="container">
        <div class="header">
            <h1>Booking Data Export</h1>
            <p>Download historical booking data with advanced filtering and export options</p>
        </div>
        <div class="content">
            <a href="@Url.Action("Index","Home")" class="back-button">← Back to Main Dashboard</a>
            <div class="filters-section">
                <div class="filters-title">Filter Booking Data</div>
                <form method="get" asp-action="BookingData" asp-controller="Home">
                     <div class="filters-grid">
                        <div class="filter-group" style="position: relative;">
                            <label class="filter-label">AccommodationId</label>
                            <input type="text"
                                   id="accommodationInput"
                                   class="form-control"
                                   placeholder="10656Midway Inn Hotel 123141234"
                                   name="p_AccommodationSearch" value="@ViewBag.getname"
                                   style="padding:10px;border: 1px solid #ddd;border-radius: 4px;transition: border-color 0.2s">
                                   <input type="hidden"
                                   id="P_AccommodatioIdIdHidden"
                                   value="@ViewBag.AccommodationId"
                                   name="P_AccommodationId"/>
                            <ul id="accommodationList" class="list-group custom-dropdown"></ul>    
                        </div>


                            <div class="filter-group">
                                <label class="filter-label">Search By</label>
                                    @{
                                        var selectedValue = ViewBag.searchfilter?.ToString();
                                    }

                                <select class="filter-input" id="ratePlan" name="searchfilter">
                                    @if (string.IsNullOrEmpty(selectedValue))
                                    {
                                        <option value="" selected>---All Search---</option>
                                    }
                                    else
                                    {
                                        <option value="">---All Search---</option>
                                    }

                                    @if (selectedValue == "1")
                                    {
                                        <option value="1" selected>Create Date</option>
                                    }
                                    else
                                    {
                                        <option value="1">Create Date</option>
                                    }

                                    @if (selectedValue == "2")
                                    {
                                        <option value="2" selected>Check in</option>
                                    }
                                    else
                                    {
                                        <option value="2">Check in</option>
                                    }

                                    @if (selectedValue == "3")
                                    {
                                        <option value="3" selected>Check out</option>
                                    }
                                    else
                                    {
                                        <option value="3">Check out</option>
                                    }
                                </select>


                               @* <select class="filter-input" id="ratePlan" name="searchfilter">
                                    <option value="">---All Search---</option>
                                    <option value="1">Create Date</option>
                                    <option value="2">Check in</option>
                                    <option value="3">Check out</option>
                                </select>*@
                            </div>

                            <div class="filter-group">
                                <label class="filter-label">StartDate</label>
                            <input type="date" class="filter-input" id="dateFrom" value="@(ViewBag.P_StartDate != null ? ((DateTime)ViewBag.P_StartDate).ToString("yyyy-MM-dd") : "")" name="P_StartDate">
                            </div>
                            <div class="filter-group">
                                <label class="filter-label">EndDate</label>
                            <input type="date" class="filter-input" id="dateTo" value="@(ViewBag.P_EndDate!= null ? ((DateTime)ViewBag.P_EndDate).ToString("yyyy-MM-dd") : "")" name="P_EndDate">
                            </div>
                         
                           <div class="filter-group">
                                <label class="filter-label">BookingStatus</label>
                            <select class="filter-input" id="bookingStatus" name="P_BookingStatusId">
                                @{
                                    bool isAllSelected = ViewBag.selectedBookingStatusId == null || (int?)ViewBag.selectedBookingStatusId == 0;
                                }
                                <option value="" selected="@(isAllSelected ? "selected" : null)">---All P_BookingStatus---</option>

                                @if (ViewBag.Booking != null)
                                {
                                    foreach (var item in ViewBag.Booking)
                                    {
                                        <option value="@item.BookingStatusId"
                                                selected="@(item.BookingStatusId == (ViewBag.selectedBookingStatusId as int?) ? "selected" : null)">
                                            @item.BookingStatus
                                        </option>
                                    }
                                }
                            </select>

                        </div>

                        <div class="filter-group">
                            <label class="filter-label">Booking Source</label>
                            <select class="filter-input" id="bookingSource" name="P_BookingSource">
                                @{
                                    bool isAllSelecteds = string.IsNullOrEmpty(ViewBag.BookingSources as string);
                                }
                                <option value="" selected="@(isAllSelecteds ? "selected" : null)">---All Sources---</option>

                                @if (ViewBag.BookingSource != null)
                                {
                                    foreach (var item in ViewBag.BookingSource)
                                    {
                                        <option value="@item.BookingSource"
                                                selected="@(item.BookingSource == (string)ViewBag.BookingSources ? "selected" : null)">
                                            @item.BookingSource
                                        </option>
                                    }
                                }
                            </select>
                        </div>



                            @* <div class="filter-group">
                                <label class="filter-label">Booking Source</label>
                                     <select class="filter-input" id="bookingSource" name="P_BookingSource">
                                        <option>---All Sources---</option>
                                            @if (ViewBag.BookingSource != null)
                                           {
                                                foreach (var item in ViewBag.BookingSource)
                                                {
                                                    <option>@item.BookingSource</option>
                                                }
                                           }
                                    </select>
                             </div>*@
                   
                 @*   <div class="filter-group">
                        <label class="filter-label">Rate Plan</label>
                        <select class="filter-input" id="ratePlan">
                            <option value="">All Rate Plans</option>
                            <option value="bar">BAR - Best Available</option>
                            <option value="advance-21">Advance Purchase 21</option>
                            <option value="advance-7">Advance Purchase 7</option>
                            <option value="corporate">Corporate Rate</option>
                            <option value="group">Group Rate</option>
                        </select>
                    </div>*@
                   @* <div class="filter-group">
                        <label class="filter-label">Guest Country</label>
                            <select class="filter-input" id="guestCountry" name="P_Country">
                            <option value="">All Countries</option>
                                <option value="Pakistan">Pakistan</option>
                            <option value="UK">United Kingdom</option>
                            <option value="DE">Germany</option>
                            <option value="FR">France</option>
                            <option value="AE">United Arab Emirates</option>
                            <option value="IN">India</option>
                        </select>
                    </div>*@
                 @*   <div class="filter-group">
                        <label class="filter-label">Minimum Amount</label>
                        <input type="number" class="filter-input" id="minAmount" placeholder="0.00" step="0.01">
                    </div>*@
                </div>

                    <div class="filter-actions">
                        <button class="filter-button primary" onclick="applyFilters()">Apply Filters</button>
                        <button class="filter-button secondary" onclick="clearFilters()">Clear All</button>
                    </div>
                </form>

            </div>

            <div class="export-section">
                <div class="export-title">Export Options</div>
                <div class="export-options">
                    <button class="export-button btn btn-success" onclick="exportDataToExcel()">
                        📊 Export to Excel
                    </button>

                    <button class="export-button" onclick=" exportDataToCSV()">
                        📄 Export to CSV
                    </button>
                  @*  <button class="export-button" onclick="exportData('pdf')">
                        📋 Export to PDF
                    </button>
                    <button class="export-button" onclick="exportData('json')">
                        💾 Export to JSON
                    </button>*@
                </div>
            </div>

            <div class="results-summary">
                
                    <div class="summary-stats">
                        <div class="summary-stat">
                        <div class="stat-value">@ViewBag.TotalBookings</div>
                            <div class="stat-label">Total Bookings</div>
                        </div>
                        <div class="summary-stat">
                            <div class="stat-value">@ViewBag.TotalRevenue</div>
                            <div class="stat-label">Total Revenue</div>
                        </div>
                        <div class="summary-stat">
                        <div class="stat-value">@ViewBag.Average</div>
                            <div class="stat-label">Average Rate</div>
                        </div>
                        <div class="summary-stat">
                        <div class="stat-value">@ViewBag.AverageBookingRate</div>
                            <div class="stat-label">AverageBookingRate</div>
                        </div>
                        <div class="summary-stat">
                        <div class="stat-value">@ViewBag.totalnight</div>
                            <div class="stat-label">TotalNights</div>
                        </div>

                    </div>

                <div class="pagination-info">
                    Showing 1-50 of 2,847 results
                </div>
            </div>

            <div class="table-container">
                <div class="table-header">
                    <div class="table-title">Booking Data Results</div>
                    <div class="table-controls">
                        <input type="text" class="search-input" placeholder="Search bookings..." id="searchInput">
                    </div>
                </div>

                <div class="table-responsive-custom">
                    <table id="myTable">
                    <thead>
                            <tr>
                            <th>AccommodationId</th>
                            <th>BookingId</th>
                            <th>BookingData</th>
                            <th>CheckIn</th>
                            <th>CheckOut</th>
                            <th>Nights</th>
                            <th>RoomName</th>
                            <th>RatePlanName</th>
                            <th>Source</th>
                            <th>Status</th>
                            <th>Amount</th>
                            <th>Country</th>
                            <th>Created</th>
                            <th>BookingCurrencyId</th>
                            <th>BookingStatusId</th>
                            <th>BookingStatus</th>
                            <th>CreateDate</th>
                            <th>StatusId</th>


                        </tr>
                    </thead>
                    <tbody>

                        @if (ViewBag.bookingData != null)
                        {
                            @foreach (var item in ViewBag.bookingData)
                            {
                                <tr>
                                    <td>@item.AccommodationId</td>
                                    <td>@item.BookingId</td>
                                    <td style="white-space:nowrap">@item.BookingDate</td>
                                    <td style="white-space:nowrap">@item.CheckIn</td>
                                    <td style="white-space:nowrap">@item.CheckOut</td>
                                    <td>@item.Nights</td>
                                    <td>@item.RoomName</td>
                                    <td style="white-space:nowrap">@item.RatePlanName</td>

                                    <td style="white-space:nowrap">@item.Source</td>
                                    <td>@item.Status</td>
                                    <td>@item.Amount</td>
                                    <td>@item.Country</td>
                                    <td style="white-space:nowrap">@item.Created</td>
                                    <td>@item.BookingCurrencyId</td>
                                    <td>@item.BookingStatusId</td>
                                     <td>
                                            <span class="status-badge
                                                @(item.BookingStatus == "Confirmed" ? "status-confirmed" :
                                                  item.BookingStatus == "Pending" ? "status-pending" :
                                                  item.BookingStatus == "Cancelled" ? "status-cancelled" :
                                                  item.BookingStatus == "Abandoned" ? "status-cancelled" :
                                                  item.BookingStatus == "No Show" ? "status-no-show" : "")">
                                                @item.BookingStatus
                                            </span>
                                     </td>
                                    <td style="white-space:nowrap">@item.CreateDate</td>
                                    <td>@item.StatusId</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>

                </div>

                <div class="pagination">
                        <button class="pagination-button" disabled>← Previous</button>
                        <button class="pagination-button active">1</button>
                        <button class="pagination-button">2</button>
                        <button class="pagination-button">3</button>
                        <button class="pagination-button">...</button>
                        <button class="pagination-button">57</button>
                        <button class="pagination-button">Next →</button>
                    </div>
                </div>
            </div>
        </div>
    <script>
        function applyFilters() {
            // Simulate filter application
            //alert('Filters applied! In a real implementation, this would refresh the table with filtered data.');
        }
        function clearFilters() {
            // Clear all filter inputs
            document.getElementById('dateFrom').value = '2024-05-01';
            document.getElementById('dateTo').value = '2024-06-30';
            document.getElementById('bookingStatus').value = '';
            document.getElementById('bookingSource').value = '';
            document.getElementById('roomType').value = '';
            document.getElementById('ratePlan').value = '';
            document.getElementById('guestCountry').value = '';
            document.getElementById('minAmount').value = '';
            document.getElementById('searchInput').value = '';
        }

        function exportData(format) {
        const fileUrls = {
            'excel': '/files/booking.xlsx',
            'csv': '/files/booking.csv',
            'pdf': '/files/booking.pdf',
            'json': '/files/booking.json'
        };

        const url = fileUrls[format];
        if (url) {
            const link = document.createElement('a');
            link.href = url;
            link.download = url.split('/').pop();
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        } else {
            alert("Invalid format selected or file not found.");
        }
    }
        // Search functionality
        document.getElementById('searchInput').addEventListener('input', function(e) {
            const searchTerm = e.target.value.toLowerCase();
            const rows = document.querySelectorAll('tbody tr');
            
            rows.forEach(row => {
                const text = row.textContent.toLowerCase();
                row.style.display = text.includes(searchTerm) ? '' : 'none';
            });
        });
    </script>

</body>
</html>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function () {
        $('#accommodationInput').on('input', function () {
            var searchQuery = $(this).val();

            if (searchQuery.length > 5) {
                $('#accommodationList').hide();
                return;
            }

            $.ajax({
                url: '/Home/BookingData',
                type: 'GET',
                data: { p_AccommodationSearch: searchQuery },
                success: function (response) {
                    $('#accommodationList').empty();

                    if (Array.isArray(response) && response.length > 0) {
                        $('#accommodationList').show();
                        response.forEach(function (item) {
                            $('#accommodationList').append('<li class="list-group-item" data-id="' + item.accommodationId + '">' + item.accommodationIdName + '</li>');
                        });
                    } else {
                        $('#accommodationList').hide();
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("Error: " + textStatus);
                }
            });
        });

        // ✅ Moved outside so it's not re-registered each time
        $(document).on('click', '#accommodationList li', function () {
            var accommodationId = $(this).data('id');
            var selectedText = $(this).text();

            $('#accommodationInput').val(selectedText);
            $('#P_AccommodatioIdIdHidden').val(accommodationId);
            $('#accommodationList').hide();
        });

        // Clear input on focus
        //$('#accommodationInput').on('focus', function () {
        //    $(this).val('');
        //});
    });

</script>

<script>
    $(document).click(function (e) {
        if (!$(e.target).closest('#accommodationInput, #accommodationList').length) {
            $('#accommodationList').hide();
        }
    });
</script>

<script>
        function exportDataToExcel() {
            var table = document.getElementById("myTable");
            var html = table.outerHTML;

            var url = 'data:application/vnd.ms-excel,' + encodeURIComponent(html);
            var a = document.createElement('a');
            a.href = url;
            a.download = 'BookingReport.xls'; // filename
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
        }
</script>

<script>
    function exportDataToExcel() {
        var table = document.getElementById("myTable");
        if (!table) return;

        var html = table.outerHTML;
        var url = 'data:application/vnd.ms-excel,' + encodeURIComponent(html);

        var a = document.createElement('a');
        a.href = url;
        a.download = 'BookingReport.xls';
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
    }

    function exportDataToCSV() {
        var table = document.getElementById("myTable");
        if (!table) return;

        let csv = [];
        let rows = table.querySelectorAll("tr");

        for (let i = 0; i < rows.length; i++) {
            let row = [], cols = rows[i].querySelectorAll("td, th");

            for (let j = 0; j < cols.length; j++) {
                // Escape double quotes and commas
                let data = cols[j].innerText.replace(/"/g, '""');
                row.push('"' + data + '"');
            }

            csv.push(row.join(","));
        }

        // Create CSV Blob
        let csvContent = csv.join("\n");
        let blob = new Blob([csvContent], { type: "text/csv;charset=utf-8;" });
        let url = URL.createObjectURL(blob);

        let a = document.createElement("a");
        a.href = url;
        a.download = "BookingReport.csv";
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
    }
</script>






