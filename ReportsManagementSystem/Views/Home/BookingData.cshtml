    @model IEnumerable<ReportsManagementSystem.Models.BookingsData>
    @using Newtonsoft.Json;
    @using System.Text.Json


    <!DOCTYPE html>
    <html lang="en">

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css" />
        <title>Booking Data Export - Bookingwhizz</title>

    <style>

    .filters-grid{
        display:grid; grid-template-columns:repeat(2,minmax(0,1fr));
        gap:16px; align-items:end;
        }
        @@media (max-width:640px){ .filters-grid{ grid-template-columns:1fr; } }

        .filter-group{ width:100%; position:relative; }
        .filter-label{ display:block; margin:0 0 .35rem; font-weight:600; }

        .filter-input,
        .form-control{
          width:100%; box-sizing:border-box;
          padding:.65rem .9rem; border:1px solid #ddd; border-radius:8px;
          font-size:16px;  /* iOS zoom fix */
          min-height:44px; /* good tap target */
          background:#fff;
    }

    select.filter-input{
      -webkit-appearance:none; -moz-appearance:none; appearance:none;
      background-image:
        linear-gradient(45deg, transparent 50%, currentColor 50%),
        linear-gradient(135deg, currentColor 50%, transparent 50%),
        linear-gradient(to right, #ddd, #ddd);
      background-position: calc(100% - 18px) 50%,
                           calc(100% - 12px) 50%,
                           calc(100% - 2.2rem) 50%;
      background-size: 6px 6px, 6px 6px, 1px 60%;
      background-repeat:no-repeat;
      padding-right:2.5rem;
    }

    /* Accommodation dropdown */
    .accommodation-wrap{ overflow:visible; }
    .custom-dropdown{
      position:absolute; top:100%; left:0; right:0;
      max-height:220px; overflow:auto; z-index:9999;
      background:#fff; border:1px solid #e5e5e5; border-radius:8px; margin-top:6px;
    }

   
        /*/*/

        .spinner {
            margin: 0 auto 20px auto;
            border: 8px solid #f3f3f3; /* Light gray */
            border-top: 8px solid #0B60B0; /* Blue */
            border-radius: 50%;
            width: 60px;
            height: 60px;
            animation: spin 1s linear infinite;
            }

            @@keyframes spin {
                0% { transform: rotate(0deg); }
                100% { transform: rotate(360deg); }
            }

        .header {
            position: relative; /* important */
        }

        .topbar {
            position: absolute;
            top: 12px;
            right: 16px;
            display: flex;
            align-items: center;
            gap: 10px;
            z-index: 5;
        }

        .logout-button {
            background: #dc3545;
            color: #fff;
            border: none;
            padding: 8px 14px;
            border-radius: 6px;
            cursor: pointer;
            font-weight: 600;
            transition: background .2s ease;
        }

            .logout-button:hover {
                background: #b02a37;
            }

    
        .back-button {
            background: #007bff;
            color: white;
            padding: 12px 24px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: 600;
            transition: background-color 0.2s ease;
            margin-bottom: 30px;
            text-decoration: none;
            display: inline-block;
        }

        .back-button:hover {
            background: #0056b3;
        }

        .filters-section {
            background: #f8f9fa;
            padding: 30px;
            border-radius: 8px;
            margin-bottom: 30px;
            border: 1px solid #e0e6ed;
        }

        .filters-title {
            font-size: 1.3rem;
            font-weight: 600;
            color: #333;
            margin-bottom: 20px;
        }

        .filters-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }

        .filter-group {
            display: flex;
            flex-direction: column;
        }

        .filter-label {
            font-weight: 600;
            color: #333;
            margin-bottom: 8px;
            font-size: 0.9rem;
        }

        .filter-input {
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 0.9rem;
            transition: border-color 0.2s ease;
        }

        .filter-input:focus {
            outline: none;
            border-color: #007bff;
            box-shadow: 0 0 0 2px rgba(0,123,255,0.25);
        }

        .filter-actions {
            display: flex;
            gap: 15px;
            margin-top: 20px;
        }

        .filter-button {
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.9rem;
            font-weight: 600;
            transition: all 0.2s ease;
        }

        .filter-button.primary {
            background: #007bff;
            color: white;
        }

        .filter-button.primary:hover {
            background: #0056b3;
        }

        .filter-button.secondary {
            background: #6c757d;
            color: white;
        }

        .filter-button.secondary:hover {
            background: #545b62;
        }

        .export-section {
            background: #e8f5e8;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 30px;
            border-left: 5px solid #1cc88a;
        }

        .export-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: #155724;
            margin-bottom: 15px;
        }

        .export-options {
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
        }

        .export-button {
            background: #1cc88a;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.9rem;
            font-weight: 600;
            transition: background-color 0.2s ease;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .export-button:hover {
            background: #17a085;
        }
        /* .results-summary {
                    background: #36b9cc;
            color: white;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }*/
        .results-summary {
            background: #3396D3;
            color: white;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .summary-stats {
            display: flex;
            gap: 30px;
        }

        .summary-stat {
            text-align: center;
        }

        .stat-value {
            font-size: 1.5rem;
            font-weight: bold;
            margin-bottom: 5px;
        }

        .stat-label {
            font-size: 0.9rem;
            opacity: 0.9;
        }

        .table-container {
            background: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            border: 1px solid #e0e6ed;
        }

        .table-header {
            background: #1a1a1a;
            color: white;
            padding: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .table-title {
            font-size: 1.2rem;
            font-weight: 600;
        }

        .table-controls {
            display: flex;
            gap: 10px;
            align-items: center;
        }

        .search-input {
            padding: 8px 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 0.9rem;
            width: 200px;
        }

        .pagination-info {
            color: #ccc;
            font-size: 0.9rem;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th, td {
            padding: 12px 15px;
            text-align: left;
            /*border-bottom: #e0e6ed;*/
            font-size: 0.9rem;
        }

        th {
            font-weight: 600;
            color: #333;
            position: sticky;
            top: 0;
            z-index: 10;
        }

        tr:hover {
            background: white;
        }

        .status-badge {
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 0.8rem;
            font-weight: 600;
            color: white;
        }

        .status-confirmed {
            background: #1cc88a;
        }

        .status-pending {
            background: #f39c12;
        }

        .status-cancelled {
            background: #e74a3b;
        }

        .status-no-show {
            background: #6c757d;
        }

        .source-badge {
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 0.8rem;
            font-weight: 600;
            color: white;
        }

        .source-direct {
            background: #1cc88a;
        }

        .source-booking {
            background: #007bff;
        }

        .source-expedia {
            background: #f39c12;
        }

        .source-agoda {
            background: #e74a3b;
        }

        .source-airbnb {
            background: #ff5a5f;
        }

        .amount {
            font-weight: 600;
            color: #333;
        }

        @@media (max-width: 768px) {
            .header h1 {
                font-size: 2rem;
            }
            
            .content {
                padding: 20px;
            }
            
            .filters-grid {
                grid-template-columns: 1fr;
            }
            
            .export-options {
                flex-direction: column;
            }
            
            .results-summary {
                flex-direction: column;
                gap: 15px;
            }
            
            .summary-stats {
                justify-content: center;
            }
            
            .table-container {
                overflow-x: auto;
            }
        }

        #myTable, #myTable th, #myTable td {
            border: 1px solid #000; /* black border */
            border-collapse: collapse; /* collapse double borders */
        }

            #myTable td, #myTable th {
                border-left: 1px solid #000;
                border-right: 1px solid #000;
            }


        /*yahatakcodehai*/
        table.dataTable thead th, table.dataTable tfoot th {
            font-weight: bold;
            font-size: 10px !important;
        }

        #myTable th,
        #myTable td {
            font-size: 9px !important;
        }



        .row-confirmed td {
            background-color: #e8f5e9 !important; /* Green */
        }

        .row-pending td {
            background-color: #ffedcc !important; /* Yellow */
        }

        .row-cancelled td {
            background-color: #FCF7F7 !important;
            /*background-color: #F7EDED !important;*/
        }

        .row-no-show td {
            color: #6c757d !important; /* Gray */
            color: white;
        }

        /* .text-wrap {
                        white-space: normal !important;
                        word-break: break-word;
                    }*/

        .custom-dropdown {
            max-height: 200px;
            overflow-y: auto;
            position: absolute;
            z-index: 999;
            width: 100%; /* Dropdown ko input ke width ke barabar rakhein */
            background-color: #007bff;
            border: 1px solid #ccc;
            border-radius: 4px;
            padding: 0;
        }

            .custom-dropdown li {
                padding: 10px;
                white-space: normal !important; /* Text wrap hone de */
                overflow: visible !important; /* Text chhupay nahi */
                text-overflow: unset !important; /* Ellipsis hata dein */
                word-break: break-word;
                cursor: pointer;
            }



        .search-input {
            padding: 4px 8px;
            font-size: 13px;
            height: 28px;
            width: 200px;
        }

        /*yahatak*/
        .custom-dropdown {
            display: none;
            position: absolute;
            width: 100%;
            top: 100%;
            left: 0;
            z-index: 999;
            max-height: 200px;
            overflow-y: auto;
            border: 1px solid #ccc;
            background-color: #fff;
            box-shadow: 0px 4px 8px rgba(0,0,0,0.1);
            margin-top: 4px;
            border-radius: 4px;
        }

            .custom-dropdown .list-group-item {
                padding: 10px 15px;
                cursor: pointer;
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
            }

                .custom-dropdown .list-group-item:hover {
                    background-color: #f5f5f5;
                }


            .custom-dropdown .list-group-item {
                cursor: pointer;
                padding: 10px 15px;
            }

                .custom-dropdown .list-group-item:hover {
                    background-color: #f0f0f0;
                }


        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: #f5f5f5;
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1600px;
            margin: 0 auto;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            overflow: hidden;
        }

        .header {
            background: #1a1a1a;
            color: white;
            padding: 30px;
            text-align: center;
        }

            .header h1 {
                font-size: 2.5rem;
                margin-bottom: 10px;
                font-weight: 700;
            }

            .header p {
                font-size: 1.1rem;
                opacity: 0.9;
            }

        .content {
            padding: 40px;
        }

     

        /* Light border for DataTables table */
        table.dataTable,
        table.dataTable th,
        table.dataTable td {
            border: 1px solid #ddd !important; /* light grey */
        }

            /* Keep rows separated cleanly */
         table.dataTable tbody tr {
            border-bottom: 1px solid #eee !important;
         }

    </style>

    </head>

    <body>

        @{
            int? selectedGroupId = ViewBag.p_ReportGroupId as int?;
            bool isGroupAllSelected = !selectedGroupId.HasValue || selectedGroupId.Value == 0;

            int? selectedSubGroupId = ViewBag.p_ReportSubGroupId as int?;
            bool isGroupSubAllSelected = !selectedSubGroupId.HasValue || selectedSubGroupId.Value == 0;
        }


        <div class="container">
          <div class="header">
            @*  yehcommentkrna*@
            <div class="topbar">
                <span class="user-pill">@ViewBag.User</span>
                <form asp-controller="Account" asp-action="Logout" method="post">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="logout-button">Logout</button>
                </form>
            </div>
           <h1>Booking Data Export</h1>
            <p>Download historical booking data with advanced filtering and export options</p>
        </div>

               @* <h4>@ViewBag.User</h4>
                    <h1>Booking Data Export</h1>
                    <p>Download historical booking data with advanced filtering and export options</p>*@
                </div>

                <div class="content">
                    <a href="@Url.Action("Index","Home")" class="back-button" style="color:white;">← Back to Main Dashboard</a>

                    <div class="filters-section">
                        <div class="filters-title">Filter Booking Data</div>
                        <form method="get" asp-action="BookingData" asp-controller="Home">

                        <div id="loader" style="display:none;
                                position:fixed;
                                top:0; left:0;
                                width:100%; height:100%;
                                background:rgba(255,255,255,0.8);
                                z-index:9999;
                                text-align:center;
                                padding-top:200px;
                                font-size:20px;
                                color:#0B60B0;">

                            <!-- CSS Spinner -->
                            <div class="spinner"></div>
                            <div>⏳ Loading... Please wait</div>
                        </div>

                            <div class="filters-grid">

                                    <div class="filter-group">
                                    <label class="filter-label" for="p_ReportGroupId">GroupName</label>
                                    <select class="filter-input" name="p_ReportGroupId" id="RolesGroupsDropdown">

                                        <option value="" select="@(isGroupAllSelected ? "selected" : null)">---SelectGroup---</option>
                                       
                                        @if (ViewBag.groups != null)
                                        {
                                            foreach (var item in ViewBag.groups)
                                            {
                                                <option value="@item.ReportGroupId"
                                                        selected="@(item.ReportGroupId == (ViewBag.p_ReportGroupId as int?) ? "selected" : null)">
                                                    @item.ReportGroupName
                                                </option>
                                            }
                                        }
                                    </select>

                                </div>

                                    <div class="filter-group">
                                    <label class="filter-label" for="p_ReportSubGroupId">SubGroupName</label>
                                    <select class="filter-input" name="p_ReportSubGroupId" id="RoleGroupCombinedDropdown">

                                        <option value="" select="@(isGroupSubAllSelected ? "selected" : null)">---SelectSubGroup---</option>                          
                                        @if (ViewBag.subgroups != null)
                                        {
                                            foreach (var item in ViewBag.subgroups)
                                            {
                                                <option value="@item.ReportSubGroupId"
                                                        selected="@(item.ReportSubGroupId == (ViewBag.p_ReportSubGroupId as int?) ? "selected" : null)">
                                                    @item.ReportSubGroupName
                                                </option>
                                            }
                                        }

                                    </select>
                                </div>

                                    <div class="filter-group" style="position: relative;">
                                        <label class="filter-label">AccommodationId</label>
                                        <textarea id="accommodationInput"
                                                  class="form-control"
                                                  placeholder="Search accommodation..."
                                                  name="p_AccommodationSearch"
                                                  style="padding:10px; border: 1px solid #ddd; border-radius: 4px; transition: height 0.2s; overflow:hidden; resize: none;"
                                                    rows="1">@ViewBag.getname</textarea>

                                                <input type="hidden" id="P_AccommodationIdHidden" name="P_AccommodationId_CHAR" value="@ViewBag.AccommodationId" />

                                                <ul id="accommodationList" class="list-group custom-dropdown"></ul>                   
                                    </div>

                                    <div class="filter-group">
                                        <label class="filter-label">DateTypes</label>
                                            @{
                                                var selectedValue = ViewBag.searchfilter?.ToString();
                                            }

                                        <select class="filter-input" id="ratePlan" name="searchfilter">
                                           
                                            @if (selectedValue == "1")
                                            {
                                                <option value="1" selected>Create Date</option>
                                            }
                                            else
                                            {
                                                <option value="1">Create Date</option>
                                            }

                                            @if (selectedValue == "2")
                                            {
                                                <option value="2" selected>Check in</option>
                                            }
                                            else
                                            {
                                                <option value="2">Check in</option>
                                            }

                                            @if (selectedValue == "3")
                                            {
                                                <option value="3" selected>Check out</option>
                                            }
                                            else
                                            {
                                                <option value="3">Check out</option>
                                            }
                                        </select>                           
                                    </div>

                                    <div class="filter-group">
                                        <label class="filter-label">StartDate</label>
                                        <input type="date" class="filter-input" id="dateFrom"
                                               value="@(ViewBag.P_StartDate != null
                                    ? ((DateTime)ViewBag.P_StartDate).ToString("yyyy-MM-dd")
                                    : DateTime.Now.ToString("yyyy-MM-dd"))"
                                               name="P_StartDate">
                                    </div>

                                    <div class="filter-group">
                                        <label class="filter-label">EndDate</label>
                                        <input type="date" class="filter-input" id="dateTo"
                                               value="@(ViewBag.P_EndDate != null
                                    ? ((DateTime)ViewBag.P_EndDate).ToString("yyyy-MM-dd")
                                    : DateTime.Now.ToString("yyyy-MM-dd"))"
                                               name="P_EndDate">
                                    </div>

                                <div class="filter-group" style="position: relative;">
                                <label class="filter-label">BookingStatus</label>

                                <div id="bookingStatusDropdown"
                                     class="form-control"
                                     style="
                                        cursor: pointer;
                                        padding: 10px 12px;
                                        border: 1px solid #ddd;
                                        border-radius: 6px;
                                        background-color: #fff;
                                        font-size: 14px;
                                        min-height: 40px;
                                        overflow-x: hidden;
                                    ">
                                    ---All P_BookingStatus---
                                </div>

                                <input type="hidden" id="selectedBookingStatusIds" name="P_BookingStatusId_CHAR" />

                                <ul id="bookingStatusList"
                                    class="list-group shadow-sm"
                                    style="
                                            position: absolute;
                                            top: 105%;
                                            left: 0;
                                            width: 100%;
                                            z-index: 20;
                                            display: none;
                                            max-height: 220px;
                                            overflow-y: auto;
                                            border: 1px solid #ddd;
                                            border-radius: 6px;
                                            background: #fff;
                                            padding: 6px 8px;
                                        ">
                                    <li class="list-group-item" style="padding: 6px 10px; border: none;">
                                        <input type="checkbox" class="booking-status-checkbox" id="selectAllStatus">
                                        <label for="selectAllStatus" style="margin-left: 5px;">--- All P_BookingStatus ---</label>
                                    </li>

                                    @if (ViewBag.Booking != null)
                                    {
                                        foreach (var item in ViewBag.Booking)
                                        {
                                            <li class="list-group-item" style="padding: 6px 10px; border: none;">
                                                <input type="checkbox" class="booking-status-checkbox" value="@item.BookingStatusId" id="status_@item.BookingStatusId">
                                                <label for="status_@item.BookingStatusId" style="margin-left: 5px;">@item.BookingStatus</label>
                                            </li>
                                        }
                                    }
                                </ul>
                    </div>


                                  
                         
                                 @*  <div class="filter-group">
                                           <label class="filter-label">BookingStatus</label>
                                        <select class="filter-input" id="bookingStatus" name="P_BookingStatusId">
                                            @{
                                                bool isAllSelected = ViewBag.selectedBookingStatusId == null || (int?)ViewBag.selectedBookingStatusId == 0;
                                            }
                                            <option value="" selected="@(isAllSelected ? "selected" : null)">---All P_BookingStatus---</option>

                                            @if (ViewBag.Booking != null)
                                            {
                                                foreach (var item in ViewBag.Booking)
                                                {
                                                    <option value="@item.BookingStatusId"
                                                            selected="@(item.BookingStatusId == (ViewBag.selectedBookingStatusId as int?) ? "selected" : null)">
                                                        @item.BookingStatus
                                                    </option>
                                                }
                                            }
                                        </select>
                                    </div>*@

                                     <div class="filter-group">
                                        <label class="filter-label">Booking Source</label>
                                        <select class="filter-input" id="bookingSource" name="P_BookingSource">
                                            @{
                                                bool isAllSelecteds = string.IsNullOrEmpty(ViewBag.BookingSources as string);
                                            }
                                            <option value="" selected="@(isAllSelecteds ? "selected" : null)">---All Sources---</option>

                                            @if (ViewBag.BookingSource != null)
                                            {
                                                foreach (var item in ViewBag.BookingSource)
                                                {
                                                    <option value="@item.BookingSource"
                                                            selected="@(item.BookingSource == (string)ViewBag.BookingSources ? "selected" : null)">
                                                        @item.BookingSource
                                                    </option>
                                                }
                                            }
                                        </select>
                                    </div>
                            </div>

                            <div class="filter-actions">
                                <button class="filter-button primary" onclick="return applyFilters(event)">Apply Filters</button>
                                <button class="filter-button secondary" onclick="clearFilters()">Clear All</button>
                            </div>
                        </form>
                    </div>

                    <div class="export-section">
                        <div class="export-title">Export Options</div>
                        <div class="export-options">
                    
                            <button class="export-button btn btn-success" onclick="exportDataToExcel()">
                                📊 Export to Excel
                            </button>

                            <button class="export-button" onclick="exportDataToCSV()">
                                📄 Export to CSV
                            </button>
                 
                        </div>
                    </div>

                    <div class="results-summary">               
                            <div class="summary-stats">
                                <div class="summary-stat">
                                <div class="stat-value">@ViewBag.TotalBookings</div>
                                    <div class="stat-label">Total Bookings</div>
                                </div>
                                <div class="summary-stat">
                                    <div class="stat-value">@ViewBag.TotalRevenue</div>
                                    <div class="stat-label">Total Revenue</div>
                                </div>
                               <div class="summary-stat">
                                <div class="stat-value">@ViewBag.Average</div>
                                    <div class="stat-label">Average Rate</div>
                                </div>
                                <div class="summary-stat">
                                <div class="stat-value">@ViewBag.AverageBookingRate</div>
                                    <div class="stat-label">Average Booking Rate</div>
                                </div>
                                <div class="summary-stat">
                                <div class="stat-value">@ViewBag.totalnight</div>
                                    <div class="stat-label">Total Nights</div>
                                </div>


                                @*<div class="summary-stat">
                                <div class="stat-value">@ViewBag.TotalCommision</div>
                                    <div class="stat-label">Commission 11%</div>
                                </div>*@

                            </div>

                           @* <div class="pagination-info">
                                
                                    <button class="export-button btn" style="background-color:#0B60B0" id="btnSummary">
                                            📊 Summary
                                    </button>
                            </div>*@
                    </div>

                    <div class="table-container">
                        <div class="table-header">
                            <div class="table-title">Booking Data Results</div>
                            <div class="table-controls">
                                <input type="text" class="search-input" placeholder="Search bookings..." id="searchInput">
                            </div>
                        </div>
         
                        <table id="myTable">
                        <thead>
                            <tr>
                                <th>BookingId</th>
                                <th>Booking Date</th>
                                <th>CheckIn-CheckOut</th>
                                <th>PropertyName</th>
                                <th>Nights</th>
                                <th>Country</th>
                                <th>Currency</th>
                                <th>BookerName</th>
                                <th>Source</th>
                                <th>Amount</th>
                                <th>BookingStatus</th>
                            </tr>
                        </thead>

                        <tbody>

                            @if (ViewBag.bookingData != null)
                            {
                                foreach (var item in ViewBag.bookingData)
                                {
                                    <tr style="font-size:8px;" class="@(item.BookingStatus == "Confirmed" ? "row-confirmed" :
                                              item.BookingStatus == "Pending" ? "row-pending" :
                                              item.BookingStatus == "Cancelled" || item.BookingStatus == "Abandoned" ? "row-cancelled" :
                                              item.BookingStatus == "No Show" ? "row-no-show" : "")">

                                            <td class="text-center">@item.BookingId</td>
                                            <td class="text-center">@item.BookingDate.ToString("dd/MM/yyyy")</td>
                                            <td class="text-center">@item.CheckIn.ToString("dd/MM/yyyy") - @item.CheckOut.ToString("dd/MM/yyyy")</td>
                                            <td class="text-center">@item.AccommodationName</td>
@*
                                            <td class="text-center">
                                            @item.RoomName - @item.RatePlanName
                                        </td>*@

                                        <td class="text-center">@item.Nights2</td>
                                        <td class="text-center">@item.Country</td>
                                        <td class="text-center">@item.CurrencyName</td>
                                        <td class="text-center">@item.BookerName</td>
                                        <td class="text-center">@item.Source</td>
                                        <td class="text-center">@item.Amount</td>
                                        <td class="text-center">
                                            @item.BookingStatus
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>

                    </table>               

                    </div>

                    </div>
                
    <script>
       
            function exportData(format) {
            const fileUrls = {
                'excel': '/files/booking.xlsx',
                'csv': '/files/booking.csv',
                'pdf': '/files/booking.pdf',
                'json': '/files/booking.json'
            };

            const url = fileUrls[format];
            if (url) {
                const link = document.createElement('a');
                link.href = url;
                link.download = url.split('/').pop();
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            } else {
                alert("Invalid format selected or file not found.");
            }
        }
            // Search functionality
            document.getElementById('searchInput').addEventListener('input', function(e) {
                const searchTerm = e.target.value.toLowerCase();
                const rows = document.querySelectorAll('tbody tr');
            
                rows.forEach(row => {
                    const text = row.textContent.toLowerCase();
                    row.style.display = text.includes(searchTerm) ? '' : 'none';
                });
            });
        </script>

    </body>

    </html>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    <!-- DataTables JS -->
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.html5.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script> 
    <!-- (Optional) XLSX library for real Excel files -->
    <script src="https://cdn.jsdelivr.net/npm/xlsx@0.19.3/dist/xlsx.full.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <!-- SheetJS for Excel export -->
    <script src="https://cdn.jsdelivr.net/npm/xlsx/dist/xlsx.full.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/jspdf@2.5.1/dist/jspdf.umd.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jspdf-autotable@3.8.2/dist/jspdf.plugin.autotable.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/jspdf@2.5.1/dist/jspdf.umd.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jspdf-autotable@3.8.2/dist/jspdf.plugin.autotable.min.js"></script>


    <script>
    $(document).ready(function () {
        let selectedAccommodations = {}; // { id: name }
        let searchTimer = null;
        let isProgrammaticUpdate = false; // input handler ko skip karne ke liye

        // Load existing selections from hidden input
        const preselectedIds = $('#P_AccommodationIdHidden').val();
        const preselectedNames = $('#accommodationInput').val();

        if (preselectedIds && preselectedNames) {
            const ids = preselectedIds.split(',');
            const names = preselectedNames.split(',');
            ids.forEach((id, index) => {
                const k = (id || '').trim();
                const v = (names[index] || '').trim();
                if (k && v) selectedAccommodations[k] = v;
            });
        }

        // Debounced search on input
        $('#accommodationInput').on('input', function () {
            if (isProgrammaticUpdate) return; // programmatic set par search mat chalao

            const inputText = $(this).val();

            // ✅ NEW: agar input empty hai to sab clear kar do
            if (inputText.trim() === "") {
                selectedAccommodations = {};
                $('#P_AccommodationIdHidden').val("");
                $('#accommodationList').hide();
                return; // aage search mat karo
            }

            const query = inputText.split(',').pop().trim(); // last token

            clearTimeout(searchTimer);

            searchTimer = setTimeout(() => {
                $.ajax({
                    url: '/Home/BookingData',
                    type: 'GET',
                    headers: { 'X-Requested-With': 'XMLHttpRequest' },
                    data: {
                        p_AccommodationSearch: query,
                        p_ReportGroupId: $('#RolesGroupsDropdown').val() || 0,      // ✅ Group filter
                        p_ReportSubGroupId: $('#RoleGroupCombinedDropdown').val() || 0 // ✅ SubGroup filter
                    },
                    success: function (response) {
                        const $list = $('#accommodationList');
                        $list.empty().show();

                        if (Array.isArray(response) && response.length > 0) {
                            response.forEach(item => {
                                const id = item.accommodationId || item.id || '';
                                const name = item.accommodationIdName || item.name || '';
                                if (!id || !name) return;

                                const isChecked = selectedAccommodations[id] ? 'checked' : '';
                                $list.append(`
                                        <li class="list-group-item">
                                            <label style="display:flex;align-items:center;gap:8px;cursor:pointer;">
                                                <input type="checkbox" class="accommodation-checkbox"
                                                       data-id="${id}"
                                                       data-name="${name}"
                                                       ${isChecked} />
                                                <span>${name}</span>
                                            </label>
                                        </li>
                                    `);
                            });
                        } else {
                            $list.append('<li class="list-group-item disabled">No results</li>');
                        }
                    }
                });
            }, 250); // debounce 250ms
        });

        // Checkbox selection (multiple selection allowed)
        $(document).on('change', '.accommodation-checkbox', function () {
            const id = $(this).data('id');
            const name = $(this).data('name');

            if ($(this).is(':checked')) {
                selectedAccommodations[id] = name;
            } else {
                delete selectedAccommodations[id];
            }
            updateSelectionDisplay(); // yeh ab input trigger nahi karega
        });

        function updateSelectionDisplay() {
            const ids = Object.keys(selectedAccommodations);
            const names = Object.values(selectedAccommodations);

            $('#P_AccommodationIdHidden').val(ids.join(','));

            // Programmatic set start
            isProgrammaticUpdate = true;
            $('#accommodationInput').val(names.join(', '));
            isProgrammaticUpdate = false;
            // Programmatic set end

            autoResizeTextarea();
        }

        // Auto resize textarea
        function autoResizeTextarea() {
            const textarea = $('#accommodationInput')[0];
            if (!textarea) return;
            textarea.style.height = "auto";
            textarea.style.height = (textarea.scrollHeight) + "px";
        }

        // Hide dropdown when clicked outside
        $(document).on('click', function (e) {
            if (!$(e.target).closest('#accommodationInput, #accommodationList').length) {
                $('#accommodationList').hide();
            }
        });

        // Enter key se accidental submit roko (optional)
        $('#accommodationInput').on('keydown', function (e) {
            if (e.key === 'Enter') e.preventDefault();
        });

        // Initial resize
        autoResizeTextarea();
    });
    </script>

    <script>
    document.addEventListener("DOMContentLoaded", function () {
        const dropdown = document.getElementById("bookingStatusDropdown");
        const list = document.getElementById("bookingStatusList");
        const hiddenInput = document.getElementById("selectedBookingStatusIds");
        const checkboxes = document.querySelectorAll(".booking-status-checkbox");
        const selectAll = document.getElementById("selectAllStatus");

        // 🟢 Toggle dropdown visibility
        dropdown.addEventListener("click", function () {
            list.style.display = list.style.display === "none" ? "block" : "none";
        });

        // 🟢 Handle checkbox click (update text + hidden field)
        checkboxes.forEach(function (checkbox) {
            checkbox.addEventListener("change", function () {
                updateSelectedStatus();
            });
        });

        // 🟢 Handle "Select All"
        selectAll.addEventListener("change", function () {
            const allChecked = selectAll.checked;
            checkboxes.forEach(cb => {
                if (cb !== selectAll) cb.checked = allChecked;
            });
            updateSelectedStatus();
        });

        // 🟢 Function to update dropdown text + hidden field
        function updateSelectedStatus() {
            const selected = [];
            const selectedNames = [];

            checkboxes.forEach(function (cb) {
                if (cb.checked && cb.id !== "selectAllStatus") {
                    selected.push(cb.value);
                    const label = document.querySelector("label[for='" + cb.id + "']");
                    if (label) selectedNames.push(label.textContent);
                }
            });

            hiddenInput.value = selected.join(",");
            dropdown.textContent = selectedNames.length > 0
                ? selectedNames.join(", ")
                : "---All P_BookingStatus---";
        }

        // 🟢 Set preselected values from backend (ViewBag)
        const selectedIds = "@ViewBag.selectedBookingStatusId"; // e.g. "1,2,3"
        if (selectedIds) {
            selectedIds.split(",").forEach(function (id) {
                const checkbox = document.getElementById("status_" + id.trim());
                if (checkbox) {
                    checkbox.checked = true;
                }
            });
            updateSelectedStatus();
        }

        // 🟢 Close dropdown if clicked outside
        document.addEventListener("click", function (event) {
            if (!dropdown.contains(event.target) && !list.contains(event.target)) {
                list.style.display = "none";
            }
        });
    });
</script>

    <script>
            function autoResizeTextarea(textarea) {
                textarea.style.height = 'auto'; // Reset height
                textarea.style.height = (textarea.scrollHeight) + 'px'; // Set height according to content
            }

            $(document).ready(function () {
                const $textarea = $('#accommodationInput');

                // Resize on page load
                autoResizeTextarea($textarea[0]);

                // Resize on input
                $textarea.on('input', function () {
                    autoResizeTextarea(this);
                });

                // Optional: if you dynamically append data to it
                function updateAccommodationInput(value) {
                    let current = $textarea.val();
                    $textarea.val(current ? current + ', ' + value : value);
                    autoResizeTextarea($textarea[0]);
                }

                // Example usage: When user selects an accommodation
                $('#accommodationList').on('click', 'li', function () {
                    let name = $(this).text().trim();
                    updateAccommodationInput(name);
                });
            });
        </script>

    <script>
            $(document).click(function (e) {
                if (!$(e.target).closest('#accommodationInput, #accommodationList').length) {
                    $('#accommodationList').hide();
                }
            });
    </script>

   <script>
    $(function () {
        const dt = $('#myTable').DataTable({
            pageLength: 10,
            order: [[1, 'desc']],
            responsive: true,
            deferRender: true,
            searching: true,
            lengthChange: false,
            dom: 't<"dt-bottom"ip>'
        });

        function resetSearch() {
            dt.search('');
            dt.columns().search('');
            dt.draw();
        }

        // space-only input => reset
        $(document).on('input change', '#searchInput', function () {
            const raw = this.value || '';
            const val = raw.replace(/\u00A0/g, ' ').trim(); // NBSP → space, then trim

            if (val.length === 0) {
                resetSearch();           // show all rows
            } else {
                dt.search(val).draw();   // normal filter
            }
        });

        // optional: Enter se form submit na ho
        $('#searchInput').on('keydown', function (e) {
            if (e.key === 'Enter') e.preventDefault();
            if (e.key === 'Escape') { this.value = ''; resetSearch(); } // Esc to clear
        });
    });
</script>

    <script>
        // Helper: visible/filtered rows ke DOM se plain text nikalo (no <span>)
        function getCleanRows(dt) {
            const nodes = dt.rows({ search: 'applied' }).nodes().toArray();
            return nodes.map(tr => Array.from(tr.cells).map(td => td.textContent.trim()));
        }

        function exportDataToExcel() {
            const dt = $('#myTable').DataTable();

            // headers (text only)
            const headers = $('#myTable thead th').map(function () {
                return $(this).text().trim();
            }).get();

            // rows (clean text; no HTML)
            const rows = getCleanRows(dt);

            // array-of-arrays (AOA) -> worksheet
            const aoa = [headers, ...rows];
            const ws = XLSX.utils.aoa_to_sheet(aoa);

            // workbook -> file
            const wb = XLSX.utils.book_new();
            XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');

            const fileName = 'table_export_' + new Date().toISOString().slice(0, 10) + '.xlsx';
            XLSX.writeFile(wb, fileName);
        }

        function exportDataToCSV() {
            const dt = $('#myTable').DataTable();

            const headers = $('#myTable thead th').map(function () {
                return csvEscape($(this).text().trim());
            }).get();

            // rows from DOM (clean) + CSV escaping
            const rows = getCleanRows(dt).map(r => r.map(csvEscape));

            const lines = [headers.join(','), ...rows.map(r => r.join(','))].join('\r\n');
            const blob = new Blob([lines], { type: 'text/csv;charset=utf-8;' });

            const a = document.createElement('a');
            a.href = URL.createObjectURL(blob);
            a.download = 'table_export_' + new Date().toISOString().slice(0, 10) + '.csv';
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);

            function csvEscape(v) {
                v = (v ?? '').toString().replace(/\r?\n/g, ' ').trim();
                if (/[",]/.test(v)) v = `"${v.replace(/"/g, '""')}"`;
                return v;
            }
        }
    </script>

    <script>
        document.addEventListener('click', (e) => {
            const btn = e.target.closest('#btnSummary');
            if (!btn) return;
            e.preventDefault();
            document.getElementById('goSummary').click(); // safe, encoded URL
        });
    </script>

@*    <script>

        document.addEventListener('click', (e) => {
        const btn = e.target.closest('#btnSummary');
        if (!btn) return;
        e.preventDefault();

        // Base URL only (no query here) — isse &amp; ka masla khatam
            const baseUrl = '@Url.Action("SummaryPDF","Home")';

            // Razor se strongly-typed/object ko JS object me serialize kar rahe hain
            const qs = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(new {
            // ✅ SummaryPDF controller yeh params read karta hai
            P_AccommodationId_CHAR = (string)(ViewBag.AccommodationId ?? ""),   // e.g. "10750" ya "10750,10751"
            P_BookingSource        = (string)(ViewBag.BookingSources ?? null),
            P_BookingStatusId      = (int?)  (ViewBag.selectedBookingStatusId ?? null),
            // ✅ ISO format, model binder friendly
            P_StartDate            = ((DateTime?)ViewBag.P_StartDate)?.ToString("yyyy-MM-dd"),
            P_EndDate              = ((DateTime?)ViewBag.P_EndDate)?.ToString("yyyy-MM-dd"),
            searchfilter           = (int?)  (ViewBag.searchfilter ?? 1),
            p_ReportGroupId        = (int?)  (ViewBag.p_ReportGroupId ?? null),
            p_ReportSubGroupId     = (int?)  (ViewBag.p_ReportSubGroupId ?? null),
            P_Entity               = 101,
            P_Query                = 1
            }));

        // Null/empty values skip karke query banayen
        const p = new URLSearchParams();
        Object.entries(qs).forEach(([k, v]) => {
            if (v !== null && v !== undefined && v !== '') p.append(k, v);
        });

        // New tab me open
        window.open(baseUrl + '?' + p.toString(), '_blank');
    });
    </script>
*@
    <script>
    function applyFilters(e) {
        document.getElementById("loader").style.display = "block"; // Show loader
        document.getElementById("filtersForm").submit(); // Submit form
    }

    function clearFilters() {
        document.getElementById("filtersForm").reset();
    }
</script>
@*
    @section Scripts {
        <script>
            $(function () {
                function fillSubGroups(groupId, preselectId) {
                    const $sub = $("#RoleGroupCombinedDropdown");
                    $sub.empty().append('<option value="">---SelectSubGroup---</option>');
                    if (!groupId) return;

                    $.get('@Url.Action("GetSubGroups","Home")', { groupId })
                        .done(function (list) {
                            $.each(list, function (_, item) {
                                const opt = $('<option/>', { value: item.value || item.Value, text: item.text || item.Text });
                                if (preselectId && (item.Value == preselectId || item.value == preselectId)) opt.attr('selected', 'selected');
                                $sub.append(opt);
                            });
                        });
                }

                $("#RolesGroupsDropdown").on("change", function () {
                    fillSubGroups($(this).val(), null);
                });

                // Page load pe prefill (agar edit form hai)
                const selectedGroup = $("#RolesGroupsDropdown").val();
                const preselectSub = "@(ViewBag.p_ReportSubGroupId as int?)";
                if (selectedGroup) fillSubGroups(selectedGroup, preselectSub);
            });
        </script>
    }
*@



    